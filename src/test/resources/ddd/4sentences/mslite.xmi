<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmlns:cas="http:///uima/cas.ecore" xmlns:type="http:///org/apache/uima/ruta/type.ecore" xmlns:xmi="http://www.omg.org/XMI" xmlns:html="http:///org/apache/uima/ruta/type/html.ecore" xmlns:type6="http:///org/cleartk/timeml/type.ecore" xmlns:type5="http:///org/cleartk/syntax/dependency/type.ecore" xmlns:type2="http:///org/cleartk/ne/type.ecore" xmlns:type8="http:///org/cleartk/util/type.ecore" xmlns:cdetector="http:///edu/isistan/carcha/concern/cdetector.ecore" xmlns:tcas="http:///uima/tcas.ecore" xmlns:type7="http:///org/cleartk/token/type.ecore" xmlns:type3="http:///org/cleartk/srl/type.ecore" xmlns:type4="http:///org/cleartk/syntax/constituent/type.ecore" xmlns:ne="http:///org/cleartk/type/ne.ecore" xmi:version="2.0">
    <cas:NULL xmi:id="0"/>
    <cas:Sofa xmi:id="1" sofaNum="2" sofaID="UriView" sofaURI="file:/Users/germanattanasio/workspace/carchatk/carcha/src/test/resources/ddd/1raw/mslite"/>
    <cas:Sofa xmi:id="8" sofaNum="1" sofaID="_InitialView" mimeType="text/plain" sofaString="This document is intended to describe the architecture for the MSLite system.&#10;The MSLite system was developed by multiple universities worldwide under the sponsorship of Siemens.&#10;The architecture description is copied verbatim from the project Wiki.&#10;The following are the different sections of the architecture and their respective descriptions: The Component &amp; Connector (C&amp;C) view-type partitions the system into components that have some runtime presence such as processes, objects, data stores and connectors or that represent pathways of communication such as information flows, and access to shared storage.&#10;These components and connectors are the elements represented in the view-types.&#10;The software architect and project manager can argue and reason about architectural properties and quality attribute requirements that the system must adhere to.&#10;The software architect, programmer and tester can infer progression of data through the system and how the structure of the system changes as it executes.&#10;External stakeholders like customers, project evaluators can understand the systems principal executing components (including the major shared data sources) and their interactions therefore serving as a means for verification and validation of system properties.&#10;Maintainers of the project can get an overview of the system as a starting point of future extensions and / or modifications.&#10;The view-type has been represented using a combination of the call-return and publish-subscribe styles because separating these two predominant styles into different views would have reduced the understandability of the system as a whole.&#10;The interactions of the different components in this view-type warrant the combination of the styles and they individually adhere to the rules of the aforementioned styles.&#10;The view shows a high level run time view of the MSLite system in terms of indicating what entities are responsible for what functionalities, where MSLite information is stored and how commands and events travel in MSLite.&#10;Configure access rights statically including persisting them in the database and in the cache.&#10;Allow access to all MSLite, L&amp;R and Alarm data based on user rights.&#10;MSLite needs a way to authorize and authenticate users as they try to use MSLite and the data within MSLite.&#10;The existence of Access Control introduces another computation in the processing of end-user data requests.&#10;This directly affects computational performance of MSLite as authorization and authentication require their own processing time.&#10;Without the functional requirement to control access to data and the security concern of data access control, the AccessControl component could be removed and the speed of MSLite processing for data requests hence improved.&#10;This is a trade-off between performance and security for MSLite.&#10;An increase in security decreases performance and vice versa.&#10;The Alarm component handles the entire lifecycle of alarms within MSLite.&#10;Managing Alarms including persisting them in a local cache: create alarm rule, edit alarm rule, delete alarm rule.&#10;Notify Presentation of newly generated alarms including: Display alarm.&#10;Trigger alarm rule including subscribing to COV events based on alarm rules, trigger Alarms, persist alarm.&#10;Future Extension: Subscribe to all alarm events generated from the FSS.&#10;Future Extension: Send alarm acknowledgment to FSS.&#10;Store field object property values for easy access.&#10;Persist all hierarchy information.&#10;Configure access rights statically.&#10;Persist MSLite users and permissions in the database.&#10;Persist L&amp;R rules in the database for, create L&amp;R rule, edit L&amp;R rule, delete L&amp;R rule.&#10;Persist alarm rules in the database for: create alarm rule, edit alarm rule, delete alarm rule, persist alarm.&#10;Synchronize MSLite with FSS configuration - Persist FSS configuration (using field object templates and instances).&#10;Persist hierarchies in the database for Managing Hierarchies including: create hierarchy, edit hierarchy.&#10;Publish all FSS (COV) Events.&#10;Execute all commands specified by MSLite.&#10;Provide initial property values to MSLite.&#10;Read FSS configuration.&#10;Provide FSS configuration to both the FSS and to MSLite.&#10;Note: There can be multiple FSS Configuration files - one for each FSS.&#10;L&amp;R Managing L&amp;R rules including persisting them in a local cache: create L&amp;R rule, edit L&amp;R rule, delete L&amp;R rule, trigger L&amp;R rule, subscribe to COVs, evaluate L&amp;R rules.&#10;Trigger reactions (equivalent to issuing commands and therefore referred to as MSLite L&amp;R Commands).&#10;MSLite Server Controls all of the Logic for: handling the Communication with the multiple FSSs.&#10;Storage and retrieval of the Object Data to and from the Cache and the Database.&#10;Handling the Subscription and Publication of all Events in the System.&#10;Handling the Events triggered from the FSSs (including COVs, NCOVs and Alarms).&#10;To perform these operations it contains the: Virtual FSS.&#10;Presentation Responsible for the following UI elements: work Area.&#10;Object Browser including: Display hierarchies.&#10;L&amp;R including: including persisting L&amp;R rules to the database: create L&amp;R rule, edit L&amp;R rule, delete L&amp;R rule.&#10;Alarms including: including persisting Alarm rules to the database: create alarm rule, edit alarm rule, delete alarm rule.&#10;Display alarm, remove request from other users screens, change alarm status in Alarm Viewer.&#10;Dismiss Alarm, managing Hierarchies including: create hierarchy, edit hierarchy, rename hierarchy or hierarchy description, delete hierarchy.&#10;Managing Logical nodes including: add logical nodes, rename logical nodes, delete logical nodes.&#10;Managing field objects including: add field objects, remove field objects.&#10;Issuing Commands including: user issues commands from UI, UI sends command to MSLite, UI reflect successful transmission of command to FSS, UI reflects failed transmission of command to FSS.&#10;UI shows current value - Subscribe to COV events based on displayed property values.&#10;Virtual FSS Publish all COV events to MSLite.&#10;Execute all commands specified from MSLite.&#10;Read FSS configuration and store it in the MSLite database.&#10;Read initial property values from the FSS and store them in the MSLite cache.&#10;Future Extension: Publish all Alarm events to MSLite.&#10;Requests the Alarm component to update the Alarm rules cache and subscriptions when a new Alarm rule has been created or an existing Alarm rule has been edited or deleted.&#10;Acknowledge Alarm - sends alarm acknowledgments to the Access Control to be send to the database.&#10;Note: The Alarm Acknowledge may also be routed through the Alarm Components since there is an extensibility requirement to require for FSS to have alarm events and alarm acknowledgments to be sent directly to the FSS.&#10;At the moment this functionality is not supported.&#10;Dismiss Alarm - Notify the AccessControl about the dismissal of an alarm.&#10;Retrieve Existing Runtime Alarms - retrieves the details of existing alarms that are persisted in the MSLite Database via the AccessControl.&#10;Retrieve Alarm Viewing Rights - retrieves the users access rights of all alarms present in the system at runtime via the AccessControl.&#10;Alarm Notification Notify the Presentation component of a newly generated alarm so that the Presentation component can display an alarm acknowledgment request and display the details of the alarm to be displayed on the Alarm Viewer.&#10;Alarm Rules &amp; Object Alarm Rules: Store Alarm rules data in the database when Alarm rules are created, edited or deleted by the Presentation component.&#10;Alarm Rules: Retrieve property values from the cache for comparison with Alarm rules when new COV events are received.&#10;Alarm Objects: When an Alarm condition evaluates to true a new Alarm Object is created by the Alarm Component and this connector persists the details of that Alarm in the Alarm Database.&#10;Alarm Subscribes to Events The Alarm component is subscribed to only those COV events for properties that are contained in its rule cache.&#10;Initial subscription is done at startup but is managed dynamically during runtime.&#10;Cache Subscribes to Events The Cache is subscribed to all COV events (at startup) so that it can be up to date with the state of the FSS.&#10;All data to be persisted in the database will use this connector.&#10;FSS Events THIS IS EXTERNAL TO THE SYSTEM AND WILL NOT BE BUILT BY MSLite DEVELOPERS.&#10;The FSS notifies MSLite of all COV events occurring within the FSS.&#10;L&amp;R Data Requests the L&amp;R component to update the L&amp;R rules cache and subscriptions when a new L&amp;R rule has been created or an existing L&amp;R rule has been edited or deleted.&#10;L&amp;R Rules Store L&amp;R data in the database when L&amp;R rules are created, edited or deleted by the Presentation component.&#10;Retrieves L&amp;R rules at startup to store in the local rule cache.&#10;Property values for each property contained in each rule are also read and stored in a local property value cache.&#10;L&amp;R Subscribes to Events The L&amp;R component is subscribed to only those COV events for properties that are contained in its rule cache.&#10;Initial subscription is done at startup but is managed dynamically during runtime.&#10;MSLite Alarm Commands THIS IS A FUTURE EXTENSION.&#10;Issue a command to either dismiss or acknowledge an alarm in the FSS (When the FSS supports alarms).&#10;This command is routed through the AccessControl Component to Manage the Access Rights of the FSS.&#10;MSLite Data For the manage hierarchy functionality: Retrieve hierarchies and field objects that are user specific.&#10;Update and / or delete hierarchies as updated by the users.&#10;Retrieve property values from the cache.&#10;For the manage alarms functionality: retrieve alarm rules for editing, retrieve alarms and their details to be displayed in the Alarm Viewer.&#10;For the manage L&amp;R functionality: retrieve L&amp;R rules for editing.&#10;Provide user access verification for all functionalities of the Presentation component.&#10;MSLite L&amp;R Commands When an L&amp;R rule evaluates to true, a reactions is triggered - this is equivalent to a command issued by the user with the difference being that this reaction or command is triggered or issued automatically by the L&amp;R component.&#10;This command is routed through the AccessControl Component to Manage the Access Rights of the FSS.&#10;MSLite User Commands Issue a user command to the FSS (via the Virtual FSS) to update a property value that a user has write access to.&#10;This command is routed through the AccessControl Component to Manage the Access Rights of the FSS.&#10;Presentation Subscribes to Events The Presentation component is subscribed to COV events for properties that are being viewed by the user and are therefore user specific.&#10;Important: These subscriptions are user specific.&#10;Publish Events to Alarm Publishes COV events to the Alarm component for the events that the Alarm component is subscribed to.&#10;Publish Events to Bus When the Virtual FSS receives a FSS Event (COV) it publishes this event to the Publish Subscribe Bus.&#10;Publish Events to Cache The Publish Subscribe Bus publishes COV events to the Cache that the Cache is subscribed to (so that it can be updated).&#10;Publish Events to L&amp;R Publishes COV events to the L&amp;R component for the events that the L&amp;R component is subscribed to.&#10;Publish Events to Presentation Publishes COV events to the Presentation component for events that the Presentation component has subscribed to.&#10;Important: These events are user specific.&#10;Publish Subscribe; a publish-subscribe connector was used because: MSLite does not know subscribers to FSS events in advance and there can be dynamic subscribers.&#10;Events from the FSS are asynchronous.&#10;Not all components interested in the same events.&#10;When 3 subscribers are registered to receive a certain COV event, they will all receive their events synchronously.&#10;The events are stored in a first-in first-out (FIFO) buffer in the publish-subscribe.&#10;Only one event is released at a time and it is sent to all subscribers concurrently.&#10;There are currently 2 kinds of event that flows through the publish-subscribe connector.&#10;Future Extension: The Publish Subscribe Connector can be used to manage Alarm Events as well.&#10;MSLite Commands to FSS All MSLite Commands (L&amp;R, User and later Alarm) are sent to the FSS - at this time all commands map to change in property values.&#10;Read Initial Property Values Retrieve the initial set of property values of the FSS.&#10;Retrieve Object Data Retrieve the Object Data when requested (e.g. by the L&amp;R and Alarm components to compare with L&amp;R and Alarm rules respectively or by a user when the view in the UI changes).&#10;Read FSS Configuration from FSS Configuration Retrieve the FSS Configuration.&#10;Send FSS Configuration Retrieve the FSS Configuration and send it to the AccessControl so it can be instantiated it in the MSLite Cache.&#10;Send Initial Property Values Retrieve the initial set of property values of the FSS and send it to the AccessControl to store them in the MSLite cache.&#10;Store FSS Configuration Store the received FSS Configuration details in the Cache.&#10;Store Initial Property Values Store the received initial set of property values of the FSS in the MSLite cache.&#10;This view shows a C&amp;C decomposition of the publish-subscribe connector.&#10;During startup and execution of MSLite, all subscribers will register with the Subscription Manager for the appropriate events they would like to receive.&#10;An assumptions made is that all rule condition evaluations are fast enough to not impact the performance quality attribute (P1).&#10;It is important to note that there can be multiple Presentation components depending on the number of logged on users in MSLite.&#10;This can be seen in the diagram.&#10;Buffer Receiver: Receive events from the Virtual FSS.&#10;Stores events in a First In First Out (FIFO) queue.&#10;Upon receiving the first ever event from the Virtual FSS, the Buffer Receiver creates a thread called the Coordinator (Coordinator Component).&#10;The Buffer Receiver releases events one at a time only after the Publisher has completed publishing the previous event to its subscribed components.&#10;Note: The functionality of the Buffer Receiver runtime component is important.&#10;This is a buffering mechanism that allows events from the FSS to be processed in the order in which they were received.&#10;The storage mechanism for this buffer needs to be first-in first-out (FIFO).&#10;The reason for the Buffer Receiver component is that MSLite needs to satisfy the reliability quality attribute (R1) that states that no events must be lost.&#10;Another reason for this component is that we want to make sure that events are captured in the order they were received from the FSS.&#10;The use of both the Buffer Receiver and the Coordinator allow MSLite to do proper rule processing which is necessary for handling alarms and the execution of logic and reactions.&#10;Buffering introduces performance degradation because events in the buffer do not get processed until all the components that used the prior event are finished processing.&#10;To address the issue of performance here, an alternative structure would be using local caches for components that need to process events.&#10;Each of these local caches would need to subscribe for events of interest and do their processing.&#10;Note though that the possibility exists that these caches perform at different speeds and would hence impact the sequencing desired for alarm and rule evaluation.&#10;Coordinator: The Coordinator starts processing events one at a time by requesting a single MSLite event from the Buffer Receiver FIFO queue.&#10;The Coordinator then proceeds to query the Subscription Manager to see who has subscribed (registered) for the event.&#10;Depending on the number of subscribers to the event, the Coordinator will create that exact number of threads called the Event Publisher(s) to send events to specific subscribers.&#10;The Event Publisher(s) will notify their subscribers concurrently.&#10;Only after the Coordinator receives acknowledgment from all created threads, will it then proceed to process the next event.&#10;The Event Publisher thread(s) will then terminate itself.&#10;Note: The requirement for the coordinator to wait for an acknowledgment was dropped due the performance issues involved and the risk of certain threads hanging while publishing.&#10;A local buffer was instead placed on each publishing thread to ensure no events were lost.&#10;Note: The use of both the Buffer Receiver and the Coordinator allow MSLite to do proper rule processing which is necessary for handling alarms and the execution of logic and reactions.&#10;The Event Publisher sends the event notification to one subscriber.&#10;The Event Publisher waits until processing of the event is complete in the respective subscriber before communicating it back to the Coordinator.&#10;Each Event Publisher thread will send completion acknowledgment to Coordinator.&#10;Only after the Coordinator receives acknowledgment from all created threads, will it then proceed to process the next event.&#10;The Event Publisher thread(s) will then terminate itself.&#10;Note: The requirement for the coordinator to wait for an acknowledgment was dropped due the performance issues involved and the risk of certain threads hanging while publishing.&#10;A local buffer was instead placed on each publishing thread to ensure no events were lost.&#10;Note: Event Publishers and the Subscription Manager are necessary to allow for the sequencing of events.&#10;Sequencing is accomplished by having all subscribers to an event signal that they are done processing.&#10;On that signal, the next buffered event is processed.&#10;The call-return connectors only return once all property values used have been accessed.&#10;The execution of a rules action is independent of its conditions evaluation and as such calls return immediately after a rules condition is evaluated.&#10;The existence of Event Publishers as threads was to achieve a performance gain to allow for parallel execution instead of blocking occurring every time an event is processed.&#10;If threads were not used, the Coordinator component would be responsible for publishing events but this would be a sequential blocking operation.&#10;Subscription Manager Maintains a list of events to which components can subscribe.&#10;Allows components to subscribe (register) to events.&#10;Maintains a list of which components subscribe to which events.&#10;Cache, L&amp;R, Presentation, Alarm Subscribe to (register) the Subscription Manager for events.&#10;Process events upon notification by Event Publisher threads.&#10;Publish Events to Bus Refer to C&amp;C Level 1 Publish Events to Bus Connector.&#10;Retrieve MSLite Event The Coordinator starts processing events one at a time by requesting a single MSLite event from the Buffer Receivers FIFO queue.&#10;Retrieve Event Subscriber List The Coordinator queries the Subscription Manager to retrieve a list of subscribers for a specific event.&#10;Spawn MSLite Event Thread Depending on the number of subscribers to the event, the Coordinator will spawn that exact number of threads called the Event Publisher(s) to send events to specific subscribers.&#10;The Event Publisher(s) will notify their subscribers concurrently.&#10;This view describes the detail C&amp;C decomposition of the Virtual FSS.&#10;The main reason for the existence of the Virtual FSS is the extensibility quality attribute concern of support for multiple FSS (E1).&#10;To accommodate this quality attribute without making the internal structure of MSLite complex, the Virtual FSS component was created.&#10;Multiple FSSs can exist and be very different in operation.&#10;For this reason, the Virtual FSS needs a way to communicate with each FSS.&#10;This is accomplished by having a one-one mapping of Adapter to FSS.&#10;For every FSS known to the Virtual FSS, there will exist one Adapter component that knows how to communicate with that FSS as well as know how to translate data from that FSS to the MSLite format.&#10;With the existence of these different adapters for each FSS, there needs to be a control mechanism that knows how to delegate and administer communication between MSLite and the various FSSs.&#10;This is the reason for the existence of the Adapter Manager, whose functionality is described in the element catalog above.&#10;Without the Adapter Manager, internal components of MSLite would have to be knowledgeable of every single Adapter that would be created for each new FSS brought into operation.&#10;This would increase the structural complexity of MSLite and increase the coupling between Adapter and the rest of MSLite.&#10;Adapter Manager Receive FSS (COV) events and publish all events to the Publish Subscribe Bus.&#10;Read the FSS Configuration and store it in MSLite database on startup.&#10;Read the initial property values for the FSS and store them in the MSLite cache on startup.&#10;Read the MSLite configuration file to retrieve the Ids for each adapter.&#10;Send MSLite commands to the appropriate FSS Adapters.&#10;Note: The Adapter Manager acts as a central component that interfaces communication between the various adapters and the rest of MSLite.&#10;The Adapter Manager receives all commands from MSLite and then proceeds to send it to the appropriate Adapter which in turn sends it to the FSS.&#10;The Adapter Manager will be responsible for receiving all events and then publishing it to MSLite via the publish-subscribe connector.&#10;The Adapter Manager has to keep a list of all the Adapters in order to determine the origin and destination of events or commands.&#10;The mapping to an adapter and an FSS is a one-to-one.&#10;The Adapter will translate all MSLite commands to the format that FSS can understand and vice-versa.&#10;The communication between the Adapter and the FSS is done via a dotNET remoting call-return connector.&#10;Adapter Translate FSS messages to MSLite messages and vice-versa.&#10;Issue MSLite commands to the FSS.&#10;Send all FSS events to the Adapter Manager.&#10;Read the FSS Configuration and transmit it to the Adapter Manager.&#10;Read the initial property values for the FSS and transmit them to the Adapter Manager.&#10;Read FSS Configuration from Adapter The Adapter Manager reads the FSS Configuration from the Adapter of each FSS.&#10;Read Initial Property Values from Adapter The Adapter Manager reads the initial property values from the Adapter of each FSS.&#10;MSLite Commands to Adapter The Adapter Manager transmits the MSLite commands to the Adapter of the specific FSS for which the command is meant.&#10;FSS Events from Adapter The Adapter transmits the FSS Events to the Adapter Manager when it receives the FSS (COV) events form the FSS.&#10;Configuration synchronization is a runtime behavior that is done when MSLite starts executing.&#10;In this operating mode, MSLite is making sure that its state information is consistent with the information known about FSSs as described in the configuration file.&#10;The internal components of the Adapter are Communicator and Configurator.&#10;These are two separate components because they are concerned with different aspects of configuration synchronization.&#10;One aspect is to read structural information an the other is to read value information for properties of these structures.&#10;It is important to note that synchronization does not occur more than once during the running time of MSLite.&#10;This decision was taken to reduce the complexity of the system.&#10;To accommodate constant configuration synchronization (i.e.&#10;synchronization after MSLite has started), the following concerns have to be addressed: Handle a new adapter for a new FSS.&#10;Frequency of polling configuration file for changes.&#10;Handle existence of property value for a non-existent FSS structure and vice-versa.&#10;The Configuration File and the FSS are external to the MSLite system.&#10;Call-return connectors were used because of the nature of the data exchange.&#10;The File Access connector is a simple I/O connector that reads data from the file.&#10;And the call-return connector used between the Communicator and the FSS is done using dotNET remoting.&#10;Read the configuration file and store the information in the database and in the cache.&#10;Communicator Read the initial property values of the FSS.&#10;Transmit all MSLite Commands to the FSS.&#10;Receive and publish all FSS (COV) events.&#10;All Connectors Refer to C&amp;C Level 1 Virtual FSS Connector Catalog.&#10;Logon: Authenticates the users login credentials.&#10;Creates each of the User Session Objects for the individual users presentation.&#10;Alarm Manager: Retrieves all those alarms, from the database via access control, that are already existing when the presentation component is instantiated.&#10;Retrieves the viewing rights of all of these alarms from the database via access control.&#10;Displays the appropriate alarms in the user sessions that have read access for them.&#10;Handles each of the notifications of all generated alarms by the Alarm Component.&#10;Displays the alarms in the appropriate user session.&#10;Notifies AccessControl about acknowledged / dismissed alarms.&#10;Alarm Display: Displays all of the generated alarms that the particular user has read access to, in the order that they occurred.&#10;Alarm Rule Manager: Allows the editing of any Alarm Rule that the user has write access to.&#10;Allows the user to create new Alarm Rules.&#10;Sends these changes to the Alarm Component.&#10;Allows the management of Alarm Rules.&#10;Hierarchy Browser: Shows the Hierarchy of Field Objects that has been selected for viewing by the user.&#10;The hierarchy can be traversed by the user by selecting the different nodes to expand or contract.&#10;Hierarchy Editor: Allows the editing an existing Hierarchy that the user has write access to.&#10;Allows the user to create a new Hierarchy that can be viewed in the Hierarchy Browser.&#10;Sends these changes to the Database via the AccessControl.&#10;LnR Rule Manager: Allows the editing of any Logic and Reaction Rule (LnR Rule) that the user has write access to.&#10;Allows the user to create new LnR Rules.&#10;Sends these changes to the LnR Component.&#10;Allows the management of LnR Rules.&#10;Property Display.&#10;Once the user has selected the property of field object to be displayed: Retrieves the initial property value from the AccessControl.&#10;Subscribes the user to events generated for the particular property.&#10;Handles all events published to the PublishSubscribe Component relating to this property.&#10;Displays received change of values for the property.&#10;The Web Browser sends the Users Logon Credentials to the Logon Component for Authentication.&#10;User Logon retrieves the users details from the database via the AccessControl so as to facilitate the authentication.&#10;Create Logon creates a unique User Session Object for each of the users as they log into the MSLite Server.&#10;Retrieve Existing Runtime Alarms The Alarm Manager retrieves the details of existing alarms that are persisted in the MSLite Database via the AccessControl.&#10;Retrieve Alarms Viewing Rights The Alarm Manager retrieves the users access rights of all alarms present in the system at runtime via the AccessControl.&#10;Display Alarm The Alarm Manager sends the Alarm details to the Alarm Display of the User Session Object for the users that have read access for it.&#10;Alarm Acknowledge The Alarm Manager notifies the AccessControl about acknowledged alarms.&#10;Alarm Dismiss The Alarm Manager requests the AccessControl the dismissing of an already acknowledged alarm.&#10;Alarm Notification The Alarm Component sends notification of each alarm to the Alarm Manager once they are generated. Store Runtime Alarm Rules The Alarm Rule sends the Updated or New Alarm Rules to the Alarm Component which looks after all of their handling issues (e.g. persistence in the database).&#10;Retrieve Alarm Rules Alarm Rule retrieves the Alarm rules from the database.&#10;Retrieve Hierarchy The Hierarchy Browser retrieves the details of the Hierarchy, which the user has chosen to view, from the Database via the AccessControl.&#10;Persist Hierarchy The Hierarchy Editor sends the Updated or New Hierarchy to the Access Control that will handle its persistence in the Database.&#10;Store Runtime LnR Rules The LnR Rule Editor sends the Updated or New LnR Rules to the LnR Component which looks after all of their handling issues (e.g. persistence in the database).&#10;Retrieve LnR Rules LnR Rule Editor retrieves the LnR rules from the database View Object The Hierarchy Browser sends the Property ID, of the Property that the user has chosen to view, to the Property Display.&#10;Retrieve Initial Property Values The Property Display retrieves the initial property value for the Field Object Property that is to be displayed from the AccessControl, which has been received from the relevant FSS and stored in the Value Cache.&#10;Property Display Subscribe to Events The Property Display subscribes to events from the FSS for the Property ID of the property it is displaying.&#10;Publish Events to Property Display The PublishSubscribe publishes events generated by the FSS for the Property ID of the property that the Property Display is subscribed to.&#10;Asynchronous Update The Property Display asynchronously updates the Web Browser with any new property values when they are received as published events from the PublishSubscribe.&#10;The Rule Processor and Alarm Processor are the two components that make up the Alarm component.&#10;Three important differences between this detailed view (Level 1 Alarm) and the high-level view (Level 1) are: In this view, there are two call-return connectors where the Presentation is the caller.&#10;However, in the high-level view, there is only one connector.&#10;Hence, the two connectors shown here make up the single call-return connector in the High-Level view.&#10;In this view, there are multiple call-return connectors from the Rule and Alarm processor to the Repository.&#10;However, in the high-level view, there is only one.&#10;Hence, these multiple call-return connectors make up the single connector in the high-level view.&#10;In this view, there is an extra subscribe connector but not in the high-level view.&#10;This two subscriptions form the single subscribe connector in the high-level view.&#10;This extra connector is to support the extensibility scenario E3 whereby alarms will be originating from an external source.&#10;Rule Processor: Subscribe to receive COV events.&#10;Evaluate the alarm rules based on COV events against property values in the cache and the alarm rules.&#10;Forward alarm rule information (if alarm condition evaluates to true) to Alarm Processor to generate alarm.&#10;Note: The Alarm Processor and Rule Processor components are separate components mainly because determining whether an alarm should be created is different from actually creating an alarm and the functionality of each of these actions can be cleanly separated.&#10;The Rule Processor deals with all the alarm rules meaning, it registers for COV events, executes the rules.&#10;The Rule Processor needs to know only about the conditions and actions that should be done based on the condition evaluation.&#10;The Rule Processor does not need to be concerned with actually creating alarms.&#10;It is only concerned with making sure that it makes the correct evaluation based on the conditions it knows of.&#10;Because of the clean separation in functionality displayed here, these two components were split.&#10;This makes the design more extensible even though extensibility with a concern for alarm functionality was not an explicit quality attribute.&#10;Alarm Processor: Generate alarm objects.&#10;Notify Presentation of new alarm objects.&#10;Future extension: Subscribe to receive Alarm events.&#10;Future extension: Issue commands to the FSS for dismissing or acknowledging alarms.&#10;Note: The Alarm Processor and Rule Processor components are separate components mainly because determining whether an alarm should be created is different from actually creating an alarm and the functionality of each of these actions can be cleanly separated.&#10;The Alarm Processor handles all processing that deals with runtime alarm objects in MSlite.&#10;This includes generating alarms and issuing the appropriate commands to the Virtual FSS based on the users context.&#10;The Alarm Processor is concerned with actually doing something with the information it gets from the Rule Processor.&#10;Because of the clean separation in functionality displayed here, these two components were split.&#10;This makes the design more extensible even though extensibility with a concern for alarm functionality was not an explicit quality attribute.&#10;Alarm Rule Information: When an alarm evaluates to true the Alarm Process must be informed so that is can generate an alarm in the system.&#10;This connector is responsible for informing the Alarm Processor and passing on all relevant information about the alarm to be generated.&#10;TRACEABILITY MATRIX Reading the Traceability Matrix.&#10;These are traces for the following: First the traces for all components to their respective modules.&#10;Then the traces from the connectors (organized by each view) to their respective modules and later the sequence diagrams.&#10;The X indicates that this trace is not required.&#10;The Process View is the runtime representation of the processes involved in executing MSLite.&#10;The run time elements from C&amp;C Level 1 view (components) are further described in the process view indicating how the different processes communicate with one another.&#10;Browser This process represents the clients browser used to access the MSLite system.&#10;Javascript This thread is responsible for executing MSLite client-side javascript code that the MSLite system will call.&#10;e.g. new alarm and property values notification.&#10;Important: The performance quality attribute of MSLite requires that the user interface be updated with alarm information within 3 seconds of the alarm occurring.&#10;To accommodate this requirement, asynchronous updates of the client-side have to be done.&#10;Callbacks from the server are embedded in the client side and handled using JavaScript so that the relevant elements of the client-side DOM can be updated to provide asynchronously updated data.&#10;Presentation This process is responsible for storing the web-page files as well as other client-side resources.&#10;L&amp;R This process is responsible for executing L&amp;R rules and commands independently of the MSLite server.&#10;It acts upon receiving COV events from the FSS.&#10;It also helps the presentation add, edit and delete L&amp;R rules.&#10;Important: It was decided to have L&amp;R and Alarm execute in their own process and as such this needed to be communicated clearly.&#10;This is done by having individual processes for these components.&#10;Both Alarm and L&amp;R components gain the following advantages when they are able to execute as separate processes in MSLite: It is easier to test and support the independent development.&#10;Run-time integration of the components is made easier as long as they obey the interfaces to which they are bound.&#10;Alarm This process is responsible for executing Alarm rules and generation of alarm objects.&#10;It acts upon receiving Alarm and COV events from the FSS.&#10;It also helps the presentation add, edit and delete Alarm rules.&#10;Important: It was decided to have L&amp;R and Alarm execute in their own process and as such this needed to be communicated clearly.&#10;This is done by having individual processes for these components.&#10;Both Alarm and L&amp;R components gain the following advantages when they are able to execute as separate processes in MSLite: It is easier to test and support the independent development.&#10;Run-time integration of the components is made easier as long as they obey the interfaces to which they are bound.&#10;MSLite Server This process is responsible for the core functionality of the MSLite system.&#10;It acts as an intermediate to allow communication between the different processes.&#10;Database This process is required to run the MSLite database.&#10;dotNET remoting The dotNET framework provides dotNET remoting to allow objects living in different processes to communicate with each other.&#10;This was a natural fit for the MSLite architecture as several processes are involved with its operation and communication is necessary between the different process as shown in the process view.&#10;HTTP For communication between the web client and MSLite running on application servers, the normal web protocol of HTTP is used.&#10;The Module view-type partitions the system into a unique non-overlapping set of hierarchically decomposable implementation units (modules).&#10;The goal is to show how the modules are decomposed, as well as the dependencies between modules.&#10;This view-type was selected because it helps the following roles: The architect, who must define work assignments in such a way so as to minimize dependencies between the modules and assign priorities (or sequences) to modules to control existing dependencies.&#10;The project manager, who must form teams, formulate project plans and schedule, knowing the individual priorities (or sequences) of these modules.&#10;Testers who use the modules as their unit of work to create test cases and perform the tests.&#10;The configuration manager who is in charge of maintaining current and past versions of the units in consistent and functional package-able assemblies, being able to produce a running version of the system.&#10;Developers, who are required to implement the modules.&#10;Maintainers, who are tasked with modifying the software modules.&#10;In this section the implementation units of MSLite and how they depend on each other are documented .&#10;The diagrams use UML 1.5 packages to depict modules.&#10;2 kinds of dependencies are included: a &quot;uses&quot; dependency between two modules A and B means that A cannot function correctly without a correct implementation of module B, whereas a regular dependency between modules A and B means that A calls B.&#10;For a general introduction to module views see Clements02.&#10;Manage user interaction with MSLite, such as editing hierarchies, acknowledging alarms, displaying field object properties, etc.&#10;The presentation module uses AJAX to asynchronously update the user interface.&#10;Rules Create, Update and Delete L&amp;R rules.&#10;Create, Update and Delete Alarm rules.&#10;Execute L&amp;R rules and issue L&amp;R commands.&#10;Execute alarm rules and generate alarms.&#10;Facilitate Alarm acknowledgment.&#10;Future Extension - Issue Alarm Commands.&#10;Publish Subscribe Hide details of event delivery: allow other modules to publish events (COV and alarm).&#10;Allow other modules to subscribe to events.&#10;Allow other modules to unsubscribed from events.&#10;Deliver published events to all subscribers.&#10;Adapter Manager Hide the fact that there are (potentially) many FSS connected to MSLite: direct commands to the correct FSS adapter.&#10;Receive COV notifications from all FSS adapters and publish the corresponding MSLite COV events to the Publish Subscribe Bus.&#10;Coordinate configuration of MSLite according to individual FSS configurations (including reading their initial property values).&#10;Data Hide details of how data is persisted and accessed: manage all persistent data in MSLite and all data in the cache.&#10;Control access to data.&#10;Maintain consistent snapshots of property values.&#10;The data module uses NHibernate to implement the mapping between objects in memory and tables in the database.&#10;FSS Adapter Hide details of configuration of and communication with an FSS: translate commands between MSLite and FSS.&#10;Translate COV notifications between FSS and MSLite.&#10;Read configuration data for a single FSS (including reading their initial property values).&#10;Future Extension: Translate alarm notifications between FSS and MSLite The adapter is specific to the kind of FSS.&#10;The presentation module for MSLite is focused mainly on the user interface functionality for MSLite.&#10;The presentation modules were created to accommodate the functional requirement and the constraint that MSLite be run as a web based application.&#10;MSLite needs to display information from the FSS to its end-users and also allow those end-users to create L&amp;R rules, login to the software system, and view and manipulate alarms.&#10;A module was created for each of these packages as the functionality they provide is independent of each other.&#10;Presentation modules have dark borders while modules with a light gray border, are external to Presentation.&#10;The light gray module are named with a prefix of the module they belong.&#10;This style denotes the external dependencies of the presentation modules.&#10;Each presentation module includes ASPdotNET Web pages, C#-code that executes on the Web server in the Presentation process, and JavaScript code that executes on the client.&#10;Trigger Property Display if the user selects a field object in the hierarchy.&#10;Use Data::Data Access to retrieve and update hierarchies.&#10;All data access is done using the interface provided by the Data::Data Access module.&#10;We assume that editing hierarchies and displaying hierarchies for browsing can potentially share some code.&#10;Display properties and their values of a field object (from the cache).&#10;Update UI as soon as a property value changes.&#10;Allow editing of changeable property values (this is the issue command functionality).&#10;Send commands to Adapter Manager and displays the result of the command execution.&#10;Data::Data Access to retrieve a list of properties for a field object the list will indicate if a user has read or write access to a property.&#10;Each user must have an event handler to receive COV events.&#10;All data access is done using the interface provided by the Data::Data Access module.&#10;Initialize other presentation modules after successful logon.&#10;Store and maintain user sessions and pertinent session information.&#10;Provide logoff functionality.&#10;Each user will have its own session.&#10;Retrieve alarm information from the database.&#10;Display current alarms.&#10;Update UI as soon as a new alarm occurs.&#10;Allow user to acknowledge alarms.&#10;Allow user to dismiss alarms.&#10;Display alarm list to user.&#10;Immediately update other user's UIs as soon a user acknowledges or dismisses an alarm.&#10;There is one shared handler for alarm notifications.&#10;Avoid using popup windows to notify the users that a new alarm has been created.&#10;All data access is done using the interface provided by the Data::Data Access module.&#10;Popups windows do not fulfill the handle alarms requirement - any user viewing an  Alarm Acknowledgment Request  can acknowledge it.&#10;After an user has acknowledged the alarm, the request should be removed from all users' screen.&#10;The use of popup windows does not allow removing the rest of the acknowledgement requests.&#10;Allow user to edit alarm rules and update them accordingly.&#10;Allow user to edit L&amp;R rules and update them accordingly.&#10;Use Data::Data Access to retrieve rules from the database.&#10;Rule editors should share code to edit the condition part of a rule.&#10;Module Level Rules: rules in MSLite consist of two parts, namely condition and action.&#10;Alarm and L&amp;R rules are the two types of rules in MSLite.&#10;The condition part of these two types of rules is the same; hence, the logic to evaluate a condition is the same and is implemented within the Condition Evaluation module.&#10;This module is used by both rules engines, Alarm and L&amp;R.&#10;The L&amp;R Rule Engine issues a command to the Adapter Manager whenever a L&amp;R rule condition evaluates to true.&#10;The Alarm Rule Engine notifies the Alarm Processing that the condition for creating an alarm is met.&#10;Then, Alarm Processing will create a new alarm, publish it, and handle its lifecycle.&#10;To accommodate the extensibility scenario E3 for future iterations, the Alarm Processing module will also subscribe to alarm events created by the extended FSS through Publish Subscribe.&#10;By then, Alarm Processing will create an alarm whenever it is created in the extended FSS.&#10;This new type of alarms will be handle as any other alarm created within MSLite.&#10;When an alarm is acknowledged, Alarm Processing will notify the Adapter Manager to change the alarm status in the extended FSS.&#10;Condition Evaluation Evaluate Alarm &amp; L&amp;R rule conditions based on COV messages (and instructions received by the Alarm and L&amp;R Engines respectively) and current property values - These checks will be made by comparing property values in the cache and the rules in the cache (and not the database) for performance reasons.&#10;These checks will be made by comparing property values in the cache and the rules in the cache (and not the database) for performance reasons.&#10;This module represents code shared between the Alarm and L&amp;R rule engines.&#10;Handle alarm lifecycles (including alarm acknowledgement).&#10;Persist all alarms in the database.&#10;Future Extensions: Subscribe to alarm events from extended FSS through Publish Subscribe.&#10;Notify Adapter Manager when an alarm has been acknowledged .&#10;Issue Alarm Commands to the Adapter Manager.&#10;Module Level1:Publish Subscribe.&#10;The Publish Subscribe module contains functionality that allows events to be propagated from the FSS to MSLite.&#10;The realization of the Buffer Receiver, Subscription Manager, Coordinator, and Event Publisher are all contained in this module.&#10;An assumption made is that it is safe for a subscriber to subscribe to an event when there is no publisher for such an event and vice-versa.&#10;Events The publish subscribe mechanism that will be implemented in this module will use structures that define Events.&#10;An event provides several pieces of information about an occurrence of some action in a FSS.&#10;Here we discuss some important issues with Events.&#10;Event Structure: Event definition.&#10;There are three fixed types of events defined for MSLite.&#10;COV events provide information on a change of property value that occurs in a FSS.&#10;An NCOV event provides error state information for circumstances when a command is issued to the FSS but the command was not actually executed.&#10;An Alarm event is also defined to accommodate the extensibility concern of support for extended FSS (E3).&#10;Each event will have a unique identifier and a set of parameters containing information about the event.&#10;The number of parameters is fixed and contains information specific to the event.&#10;Components within MSLite are allowed to subscribe and unsubscribe for events during the running lifetime of the system.&#10;Because of this, events will need to be bound to components dynamically to support subscribing and unsubscribing.&#10;Allow components to subscribe and unsubscribe to events.&#10;To accommodate the Extensibility scenarios, the VirtualFSS was incorporated in the architecture to allow the addition and replacement of FSS without requiring changes in MSLite.&#10;The VirtualFSS contains two modules: The AdapaterManager and the FFSAdapter Each FSS interacts with the Adapter Manager through a FSS Adapter.&#10;There is one FSS Adapter for each FSS.&#10;The Adapter Manager has a configuration file that contains all the information of FSS Adapters that are expected to interact with the MSLite system.&#10;The rationale for having a configuration file is to avoid changes in the Adapter Manager module for each addition or replacement of FSS Adapters.&#10;The Adapter Manager will read its configuration file each time the system is restarted to register the FSS Adapters.&#10;If there is a new FSS Adapter, it has to be added in the configuration file and the MSLite system must be restarted in order to recognize the new FSS Adapter.&#10;Direct commands to the correct FSS adapter.&#10;Receive COV notifications from all FSS adapters and publish the corresponding MSLite COV events to Publish Subscribe.&#10;Coordinate configuration of MSLite according to individual FSS configurations.&#10;The Adapter Manager knows about the FSS Adapters because of the configuration file.&#10;This configuration file has the name of the main class, dll name, and identification number of each adapter.&#10;The Adapter Manager will instantiate FSS Adapters using the name of the main class stored in the configuration file.&#10;No recompilation should be needed for the Adapter Manager to incorporate or replace FSS Adapters.&#10;The identification number must be a unique number within the configuration file.&#10;This number is stored in the internal_id field from the ObjetcID class of the Base Package in the Domain Model.&#10;This mechanism serves to identify to which FSS an object, such as field objet and property value, belongs to.&#10;Each FSS maintains its own identification numbers which can be stored in the external_id field of the ObjectID class.&#10;The internal_id and external_id form a unique pair of identifiers that the Adapter Manager uses to send and retrieve information from FSS Adapters.&#10;For each FSS there will be an Adapter to accommodate the functionality and interaction with an FSS, such as translate commands, COVs, and alarm events from the corresponding FSS to MSLite and vice versa.&#10;Although there will be an Adapter for every FSS, all the Adapters interact with the Adapter Manager; hence, they have a common back-end to allow for this communication.&#10;When designing this module for the first time, the team has to think of a class template that has the back-end to interact with the Adapter Manager.&#10;This template should be reused when creating a new Adapter.&#10;In this way, all the FSS Adapters will have the same back-end and a different front-end specific to a particular FSS.&#10;Create or update MSLite configuration based on FSS configuration data.&#10;Read initial set of values at system start up time.&#10;The configuration data for each FSS is provided in a FSS Configuration XML file.&#10;Translate from MSLite commands to FSS commands.&#10;Detect failure of FSS to change a value as required by a command and send MSLite NCOV events.&#10;Translate from FSS COV event to MSLite COV notification.&#10;Notify Adapter Manager to publish MSLite COV notification.&#10;The purpose of the Value Cache is to maintain the property values in memory and give a snapshot of these values at the time an event is generated.&#10;That is, the Value Cache keeps a copy of value of the properties in the FSS, and updates the values one by one per COV event.&#10;The Rules::Condition Evaluation submodule reads the property values in the Value Cache indirectly when evaluating the condition of a rule.&#10;This is done indirectly because Value Cache can only be accessed through Data Access which checks the permission first.&#10;For example, there is a L&amp;R rule that triggers an action when property A is and property B is 2.&#10;These two properties changed almost at the same time in the FSS.&#10;Property A changed to and later B changed to 1.&#10;As a consequence, two COV events are generated within MSLite but they are handle one by one in the order they happened.&#10;L&amp;R Rule Engine is notified that property A changed to 4 and checks for the value of B at the time A changed by reading the Value Cache.&#10;The value of B in the Value Cache is still 2 because it is a snapshot of all property values when A changed.&#10;Hence, L&amp;R Rule Engine triggers the action because the condition of that rule is met.&#10;Check if a user is an authorized user within MSLite for login purposes.&#10;Maintain list of currently logged on users and assign an authorization token to each user.&#10;Allow other modules to check what kind of access a user has to a certain data element.&#10;Allow users to retrieve data they have access to from the database and from the cache.&#10;Persist data in the database.&#10;Store and update the data in the cache.&#10;A system token is used by the L&amp;R and Alarm components to indicate that no permission is required to access the information.&#10;The data types that are used in the Data Access are according to the Field Objects and Object Types packages found in the domain model.&#10;Hibernate is used as a dotNET based object persistence library for relational databases.&#10;Store all property values.&#10;Update values based on COV messages.&#10;The dotNET framework provides dotNET remoting to allow objects living in different processes to communicate with each other.&#10;This was a natural fit for the MSLite architecture as several processes are involved with its operation and communication is necessary between the different process as shown in the process view.&#10;For communication between the web client and MSLite running on application servers, the normal web protocol of HTTP is used.&#10;Allocation Architectural view External environments such as hardware, file systems, and team structures all interact with the software architecture and hence, this interaction must also be documented.&#10;The Allocation view type achieves this by showing the mapping from elements of either a module or a C&amp;C style onto elements of the environment.&#10;This view-type was selected because it helps the following roles.&#10;The project manager can view the assignment of software units to development teams in order to identify the work breakdown structures and for detailed budget and schedule estimates.&#10;The software architect can place some development constraints on the software units based on hardware specifications to meet certain quality attributes.&#10;Developers and testers can adhere to the file system structure placed by the software architect in order to keep the control and integrity of the system in being deployed.&#10;External stakeholders like customers can know the type of hardware configurations they are expected to have in order to use the system.&#10;Maintainers of the project can get an understanding of the type of environment that the system is being deployed on and hence, keep the same infrastructure regardless of the iteration of the system.&#10;The view-types has been represented using a number of styles.&#10;Deployment Style: Mapping of the software architecture to the hardware configurations.&#10;Implementation Style: Mapping of the software architecture to the implementation infrastructure of the system.&#10;Work Assignment Style: Mapping of the software architecture in terms of software units to the development teams.&#10;The Deployment view presents the mapping from the elements from the C&amp;C style on to the elements of the environment (Clements 02).&#10;It illustrates the different subsystems of MSLite and how they are distributed across different machines.&#10;It also describes the communication between each subsystem in a machine will interact with other subsystems in their respective machines.&#10;The deployment diagram shown is not the only option that is available in deploying the MSLite system.&#10;There are other scenarios such as: FSS being deployed on a separate machine, Presentation being deployed on a separate machine.&#10;There will be some MSLite code in the form of Javascript in the browser and hence, the system boundary of MSLite includes some portion of the user's workstation browser.&#10;This contains one or more dotNET assemblies for the webpage and other client-side resources.&#10;These assemblies will be executed in the context of the Application Server in a dedicated ASPdotNET process.&#10;It will communicate with the MSLite Server subsystem by means of dotNET remoting.&#10;This subsytem will be executed in a dotNET executable as a separate process.&#10;This is the main subsystem that acts as a middle subsystem | Database.&#10;The Alarm executable will also be executed as a separate process in MSLite.&#10;It will communicate with the MSLite server and the database for rule operations as well as managing the lifecycle of an alarm object.&#10;Future extension: It will issue Alarm Commands to the FSS through the MSLite Server L&amp;R.&#10;The L&amp;R executable will also be executed as a separate process in MSLite.&#10;It will communicate with the MSLite server and the database for rule operations.&#10;It will issue L&amp;R Commands to the FSS through the MSLite Server.&#10;There will be a MySQL database which is accessible to the MSLite Server subsystem.&#10;Other subsystems like L&amp;R and Alarm will access the database through the MSLite Server.&#10;The MSLite system will interact with the FSS system by means of dotNET remoting.&#10;This architectural view of MSLite focuses on the structure of the project on the file-system that will be used by developers of the project.&#10;This file system view contains elements that represent directories that exist on a hard drive and the relationships represent the parent-child relationship between directories.&#10;Child elements are sub-directories contained within the parent directory.&#10;Top-level directory that contains all files and folders with information concerning MSLite project.&#10;Contains instruction oriented documentation created by stakeholders (i.e. developers, architects, managers).&#10;Contains generated API documentation from dotNET projects.&#10;This directory is to be referenced from the dotNET projects created for MSLite other.&#10;Contains miscellaneous documentation that cannot be categorized as API documentation.&#10;Contains binaries generated from the compile of the dotNET projects along with any other binaries necessary for software system execution.&#10;All dotNET projects will have this directory as the output directory.&#10;Contains debug version of binaries generated from compile of projects.&#10;Contains release version of binaries generated from compile of projects.&#10;Contains C# source code for all projects created for MSLite.&#10;Projects will live in sub-directories within this folder.&#10;Contains C# source code that constitutes the core set of functionality for MSLite.&#10;Contains C# source code that is used to unit test projects for MSLite.&#10;The output of these unit tests is the MSLite/bin directory.&#10;Contains C# source code for the Field System Simulator (FSS).&#10;Since this application is external to the MSLite system boundary, its source is kept separate from MSLite's core.&#10;Contains source code and documentation for third-party libraries used during the development of MSLite.&#10;Any projects that use these third-party libraries must reference them using this directory.&#10;Contains source code and documentation for a particular third-party library.&#10;Each third-party library is stored in its own sub-directory of the MSLite/libs directory.&#10;Contains scripts used to build MSLite, configure the environment, or perform administrative tasks for MSLite.&#10;Contains build scripts for MSLite project.&#10;Contains configuration scripts for MSLite.&#10;Contains administration scripts for MSLite.&#10;Binary output directory The MSLite/bin folder is the target folder for all output from compilation.&#10;The reason for this structure is that it allows all the different distributed projects to have a common area for execution.&#10;If each project had its own output folder, developers would have to copy files across projects to get a running executable.&#10;This cross copying of files would be necessary because of the dependencies that exist between modules in MSLite.&#10;If there were no dependencies between modules, then each project could run independent of each other and contain their own output folder.&#10;Source directory The MSLite/src folder contains all source code written for MSLite.&#10;The sub-directories of this folder contain the individual projects that contain the implementation for the various modules of MSLite.&#10;Folder names for projects reflect the namespace structure used for the MSLite modules.&#10;The reason for this structure is that it immediately allows a developer to understand the structure of the software system by directly seeing a one-one mapping of modules to file structure.&#10;When a developer needs to know where to find code for a module they depend on, they are immediately given a clue by looking on the file structure.&#10;A caveat with this structure however, is that the file structure names can become verbose depending on the naming scheme used for namespaces.&#10;The source folder also contains a tests sub-directory.&#10;This directory contains unit tests for the MSLite modules.&#10;The structure of this sub-directory reflects the structure of the core and fss directories.&#10;The reason for this is that unit tests are self-contained and should be specific to a module.&#10;MSLite module projects The modules identified in the module views of MSLite will be implemented in dotNET based projects.&#10;Each module will have functionality that exists in namespaces that reflect the logical structure from the module view.&#10;Each project lives within a folder whose name is the namespace containing the module structure.&#10;The top level namespaces are as follows: mslite, fss , mslite tests core , mslite testsfss.&#10;The two top-level namespaces for MSLite are mslite and fss because the FSS is external to the MSLite system boundary.&#10;The functionality of the FSS can be implemented completely independently of the MSLite and its core modules.&#10;However, the MSlite core modules have a tighter coupling to the FSS as it uses information from the FSS.&#10;Because this dependency is not bi-directional, there can be two separate top-level namespaces to logically organize the development of these systems.&#10;The namespaces identified based on the module view of MSLite are: mslite adaptermanager, mslite data, mslite fssadapter, mslite presentation, mslite publishsubscribe, mslite rules.&#10;As an example of a filesystem layout, we can view the file structure when the modules of MSLite are created on a filesystem using the Microsoft Windows operating system.&#10;Project references The file structure in this view allows the MSLite project structure to be portable.&#10;The top-level MSLite directory acts as a starting point for referencing material within the project space.&#10;All projects, scripts, and binary references must use relative paths.&#10;The use of relative paths allows the MSlite project structure to be distributable in the sense that the entire project structure can be transferred to different machines without the need for reconfiguring references throughout the project.&#10;If absolute paths were used for file and folder references, then the absolute path would have to be mirrored on any file system that the project is transferred to.&#10;Assumptions made during the discussion of the architecture background are mainly concerned with the development teams tasked with building the MSLite software system.&#10;The development teams are assumed to: have access to a central version controlled repository provided by Siemens to do their development.&#10;Be comfortable with using the Microsoft Visual StudiodotNET 2003 IDE for development and know how to change project settings.&#10;Be aware of their assigned modules from the MSLite architecture.&#10;Be familiar with the MSLite Code Integration process and the MSLite Change Control process provided by Siemens.&#10;Be familiar with constructing and using unit tests.&#10;The domain model comprises packages that allow MSLite to represent field systems and field system elements, users and permissions, as well as hierarchies.&#10;In addition there are provisions to model alarms and preferences.&#10;This model represents the objects that will be kept in memory.&#10;At runtime, each object is identified by a pair of unique identifiers.&#10;Identifiers are of type ObjectID.&#10;Object identifiers can be compared for equality.&#10;Several associations model one-to-many relationships.&#10;In all these cases the elements at the multiplicity many end are ordered.&#10;UML 1.5 class diagrams are used to represent the domain model.&#10;In the class diagrams, abstract classes are shown in grey.&#10;The base package contains all domain classes that are globally used(inherited) by other domain classes.&#10;Every object and property stored in the system will have both its ID's filled in.&#10;This is important because, the system should be able to identify which objects originated from which external systems.&#10;The id attribute represented in this class is inherited by all objects.&#10;It will represent a set of unique identifiers.&#10;The 'id' attribute is derived from the datatype class called ObjectID.&#10;Every field object or property will have a set of two unique identifiers.&#10;external_ID - This attribute represents the id of the external system.&#10;internal_ID - This attribute represents the id of the object/property stored in the external system.&#10;This attribute represents the id of the external system.&#10;This attribute represents the id of the object/property stored in the external system.&#10;The users package contains all domain classes related to users and user preferences.&#10;The domain model does not allow the declaration of types for preference values.&#10;It is assumed that the user of a preference must know the type of the preference value in advance.&#10;This is different from the template/instance mechanism where clients cannot know the types of properties in advance.&#10;Interface implemented by all user classes.&#10;Each user object represents a user who is logged in.&#10;Users are uniquely identified by a user name.&#10;The User class keeps track of username, systemid defining this user.&#10;This is a base class for other types of users to be used within tokens.&#10;Notice that preferences have been removed from the user model all together.&#10;A user group is a security mechanism which groups users together.&#10;Associations between user and UserGroup are not maintained within this class currently.&#10;Currently there is no need to be able to determine the users within a UserGroup without querying the database.&#10;User encapsulated within a SystemToken.&#10;A system user is a user that will log in for a runtime component such as alarmrules engine.&#10;User encapsulated within a UserToken.&#10;A UIUser is a user that will log in from the presentation layer.&#10;Unique id identifying this user or usergroup.&#10;This value is globally unique and in time will be retrieved from the database.&#10;At this point the default constructor will be removed.&#10;The hierarchy package contains all domain classes related to hierarchical structuring of data.&#10;A hierarchy can be used to overlay an arbitrary tree structure on object instances in the MSLite system.&#10;This package addresses the functional requirement about browsing the available data from the FSS in multiple hierarchical views (F3).&#10;A hierarchy root contains all metadata for a hierarchy.&#10;A hierarchy is to be referenced only through the root.&#10;All hierarchies are defined by the users.&#10;A hierarchy references the user who created the hierarchy.&#10;This is the only user allowed to edit the hierarchy.&#10;Hierarchy nodes define the tree structure through an association to other hierarchy nodes.&#10;This class represents all nodes in the tree.&#10;Leaves do not have any references to other child hierarchy nodes.&#10;Hierarchy nodes can be of two types namely structural node or object reference.&#10;A structural node is a node in the hierarchy that does not represent any object related to field systems.&#10;A structural node is used to define arbitrary groupings in the hierarchy, such as building, floor, or room.&#10;Structural nodes are composed by Hierarchy Nodes.&#10;An object reference inserts a reference to a field system object into a hierarchy.&#10;The referenced object instance represents a concrete field system or field system element that is managed by MSLite.&#10;This additional level of indirection permits, as an extension, to attach hierarchy-specific properties to the object reference.&#10;The objects package contains domain classes related to object templates and object instances.&#10;The design closely follows the ideas from the BACnet specification in that field systems and points are modeled as objects that have a fixed set of typed properties.&#10;See chapter 12 and appendix D of [ASHRAE 01] for a details and examples.&#10;Object templates define the names and types of properties of an object (i.e.&#10;metadata of object instances), whereas object instances contain the values of these properties at run-time.&#10;A template is similar to a class, whereas an instance is similar to an object in an object-oriented programming language,.&#10;The objects package provides a generic template-instance structure for reuse in concrete contexts, for example, to define field objects.&#10;There are some constraints, an object instance must contain exactly one property value for each property definition contained in the referenced object template.&#10;All property values must match the type in the referenced property definition.&#10;An object template defines a particular type of object.&#10;An object template is identified by a name and it contains the definition of object properties.&#10;This class represents a property that has a name and a type.&#10;A property may be read-only or read-write.&#10;Represents a property access enumerated type.&#10;Defines the set of values a property may assume.&#10;Subclasses can be added here to extend the domain model, e.g., with complex or collection types from BACnet.&#10;A simple type has values with no internal sub-structure accessible to a client.&#10;An object instance contains the run-time values for all the properties defined in an object template.&#10;Each instance has exactly one template.&#10;The reference to the template cannot change.&#10;Each object instance is uniquely identified by its name.&#10;An property instance contains the run-time value a property defined in an object template.&#10;Each instance references a property definition.&#10;This association can be used to obtain type information for the value.&#10;The base class of all property values.&#10;Each property value is contained in a property instance.&#10;Subclasses can be added here to extend the domain model with, e.g., complex and collection values from BACnet.&#10;This is the base class for all simple, unstructured property values.&#10;This package contains the simple, non-composite, property types and values.&#10;The constraints in types are meant as a hint to the presentation subsystem, in particular the list of allowed values in the string type.&#10;A simple type has values with no internal sub-structure accessible to a client.&#10;Scalar types are self contained in that they do not reference other objects.&#10;These types reference objects in the domain model.&#10;An arbitrary-length sequence of characters.&#10;The length and allowed values can be constrained in the type.&#10;If minLength &gt; maxLength then there is no length constraint.&#10;The list of allowed values can be used to simulate enumerations.&#10;If the list is empty any value is allowed, if the list is not empty a length constraint is ignored.&#10;The range may be constrained in the type.&#10;If minValue &gt; maxValue then there is no constraint.&#10;The range may be constrained in the type.&#10;If minValue &gt; maxValue then there is no constraint.&#10;A property of this type can have date (and time) as its value.&#10;Blobs are arbitrary length sequences of bytes.&#10;The idea is that a blob can hold an arbitrary serialized object.&#10;A property of this type can have values true or false.&#10;It is not yet known if there will be an actual use for this.&#10;References to property values will be used to model commands that change values of properties.&#10;Field objects model field systems devices.&#10;Field object instances can be presented to users in hierarchies.&#10;Field object templates and corresponding instances are created in the domain model based on configuration information from field systems.&#10;For example, a HVAC system has many temperature sensors SS..., Sn of the same type T.&#10;In this case the domain model will contain one object template that describes T and n object instances, one for each sensor.&#10;The template may have a property definition for the current temperature of type integer, and each instance will have an integer value that contains the current temperature reading of this sensor.&#10;There are the following constraints: the template of a field object instance must be a field object template.&#10;A field object template defines a type of field object which can have multiple identical instances, for example, a type of temperature sensor.&#10;The template defines which property values each of its instances will provide at run-time.&#10;A field object instance models a physical field system device.&#10;For example, a temperature sensor in room 12 in a particular building.&#10;There may be many identical temperature sensors in a particular site.&#10;However, the sensor reading can be different for each of these sensors.&#10;Instances store these different readings as property values.&#10;This class provides an unique identifier to the alarm class.&#10;Every time a new object is instanced, a unique string ID is assigned to it.&#10;The class allows comparing equality of objects via this ID.&#10;Counter used to assign unique identifiers to each instance of the class.&#10;This is a container class representing an alarm in the MSLite System.&#10;Each alarm has an associated property value that triggers the creation of the alarm.&#10;An alarm contains an identifier, a name, the time when it was created, the status (new, acknowledged or dismissed), and the value of the property at the time the alarm was created.&#10;It also references the associated property instance that always contains the current value of the property.&#10;Once the alarm is acknowledged, it references the user who acknowledged the alarm.&#10;Set the state of the alarm to ack and sets the user who acknowledged it.&#10;One alarm can only be acknowledged when its state is set to new.&#10;Further acknowledgements don't make anything .&#10;Set the state of the alarm to dismissed.&#10;One alarm can only be acknowledged when its state is set to ack.&#10;Calls in other states don't do anything.&#10;The security package contains all domain classes related to user permissions.&#10;This package addresses the functional requirement about control access to data (F8).&#10;A user is authorized to access a data element if the user belongs to a user group that is authorized to access this data element.&#10;A user group is authorized to access an element if it has a permission for this element.&#10;If a user or group has both read-only and read-write access for a data element this is equivalent to having read and write access for this data element.&#10;A user has access to an IDataElement, which in this instance is a PropertyInstance, if the userAccess is set to DataPermissionType READ or DataPermissionType READWRITE.&#10;Interface defining permissions for functions and data.&#10;Interface defining data permissions.&#10;Interface used to define permissions for actions such as adduser, updateusergroiup, not yet implemented.&#10;Defines DataPermissions, ensures data permission type conformance.&#10;Interface implemented by data resources which have restricted user access for hierarchies, alarms and l&amp;r, currently only implemented by propertyinstance.&#10;A data element represents the finest level of access control supported for authorization.&#10;Any element in the domain model that is subject to authorization must be a subclass of this class.&#10;Currently, only PropertyInstance by virtue of IPropertyInstance is a subclass of the IDataElement class.&#10;A user needs read permission to view the value of a property and write permission to edit it.&#10;Permission to objects are derived from the permission to its property values.&#10;Interface implements IDataElement and is implemented by PropertyInstance.&#10;Implements IPropertyInstance, IDataElement.&#10;AccessControlList is added as an attribute.&#10;Interface specifying the methods implemented by an accesscontrollist.&#10;The accessControlList class is a hash table storing SystemID (user and usergroup) and IDataPermission pairs.&#10;If a user or usergroup is not in the hashtable, the user or usergroup does not have access to the dataelement.&#10;Unique id identifying this user or usergroup.&#10;This value is globally unique and in time will be retrieved from the database.&#10;At this point the default constructor will be removed.&#10;A function permission represents the right to execute a function in MSLite.&#10;Such a function will typically be presented to a user in a menu or as a button.&#10;Not every user will have permission to execute all functions of the system.&#10;For example, creating a user will be limited to administrative users.&#10;Currently, there are no restrictions on which MSLite functions a user is allowed to use.&#10;This can be extended for future iterations.&#10;This will implement MSLite Interfaces ObjectModel Security IFunctionPermissions.&#10;Carries the Data Permission Types of READ, READWRITE, UNAUTHORIZED.&#10;Encapsulated by DataPermissions.&#10;Carries the Function Permission Types.&#10;The requirements for this are not well defined.&#10;Current class specifications may be changed.&#10;Should be encapsulated by a class called FunctionPermissions, implementing IFunctionPermission for use within an administrative interface.&#10;The ResultSet package is a package with the intention of ensuring Information Hiding and proper Encapsulation within a distributed computing environment.&#10;This package is used to make the AccessControl component return the same object no matter what function is called.&#10;This design methodology is used by database APIs to ensure that each result, no matter which data structures are returned by the database, is returned without necessitating user knowledge of all data structures, error possibilities, audit trails and meta data of all objects within data persistence.&#10;This package provides the following capabilities: Encapsulation of all information contained within the Database or Value Cache into one consistent object.&#10;Retrieval of meta data information including column names and column types.&#10;Enumerator interface to all information.&#10;Guarantee all columns within the AccessControlResultSet are of the same types as specified by the meta data.&#10;Guarantee that each object returned is not null.&#10;Retrieval of errors which occurred at the AccessControl.&#10;Because of this, Exceptions never need to be thrown over a dotNET remoting interface.&#10;Retrieval of Auditing information and audit trails including Add number, Remove Number, Update Number.&#10;Defines methods which the AccessControlResultSet must implement.&#10;Defines methods which the ILogonAccessControlResultSet must implement.&#10;Defines a data structure which is an enumerator, is enumerable, encapsulates exceptions thrown at the server, encapsulates an audit trail, provides a generic wrapper for any type of object or set of objects which are returned from the accesscontrol (regardless of which data store they are queried from), ensures all data within each row are a specified type, ensures each column has a name and provides valid meta data for the entire collection of objects.&#10;Performs all functions of AccessControlResultSet but also adds token access for logon and logoffs.&#10;This ResultSet is intended to return a list of user preferences to User Interface Users.&#10;Row of data within AccessControlResultSet.&#10;Must be filled to capacity in order to be added to the AccessControlResultSet.&#10;MetaData which includes column names and column types of all objects within an AccessControlResultSet.&#10;Column names within an AccessControlResultSet.&#10;Column types within an AccessControlResultSet.&#10;AccessControl ensures that each row added adheres to the column types specified in the types listing.&#10;Rule Objects Package.&#10;The whole deal here is based around the MSLiteRule class.&#10;There are two kinds of MSLite Rules; L&amp;R and Alarm rules.&#10;These classes are all bundled together at the top and handle the creation, editing and deletion of the different types of rule.&#10;An rule consists of a number of items, one of the main ones being the expression.&#10;This can be simple or complex.&#10;A single statement expression is considered simple.&#10;A longer one consisting of multiple parts, AND/OR's and multiple nested parentheses.&#10;This is currently undergoing review at the moment.&#10;Specifies the contract for all rule based objects.&#10;Implements common functionality used by the LnR and Alarm rule classes which are derived from it.&#10;It provides container capability for Expression objects and its derivatives.&#10;It exhibits the IMSLiteRule interface.&#10;This is the Alarm Rule class, which manage MSLite Alarm rules.&#10;This manages the creation, modification and deletion of any MSLite Alarm rule.&#10;It is a specialisation of the MSLiteRule class.&#10;This is the LNR Rule class, which manage MSLite L&amp;R rules.&#10;This manages the creation, modification and deletion of any MSLite L&amp;R rule.&#10;It is a specialization of the MSLiteRule class.&#10;Associated with the AlarmRule class.&#10;It contains an object reference and a property on that object which is to be displayed in the event of an alarm condition.&#10;Associated with the LNRRule class.&#10;It consists of an object reference and a property on that object which is to receive a new value in the event of a successful logic rule evaluation.&#10;This class is the main class for managing Expressions.&#10;An expression can consist of a simple statement or it can be a complex parenthesized expression with many parts.&#10;Typically each of the parts will be connected by logical connector delimiters.&#10;This class provides basic behavior to chain expressions together by means of LogicalConnector objects.&#10;Concrete specializations of this class include: ParenExpression - A container for a sub-expression affording precedence in evaluating the sub-expression vis-a-vis the surrounding expression.&#10;BinaryExpression - An expression consisting of a relational comparison of two operands.&#10;UnaryExpression - An expression consisting of a single operand that is tested for true/false status.&#10;A connector allowing two expressions to be chained together by means of a logical conditional operator ( e.g. AND, OR, AND NOT, OR NOT).&#10;This class allows the system to handle complex expressions involving multiple simple expressions connected by logical delimiters and separated with parentheses.&#10;A concrete specialization of the abstract Expression class.&#10;It facilitates capture of expressions that are a comparison of two operands by means of a relational operation ( e.g. operand-a rel-op operand-b).&#10;A concrete specialization of the abstract Expression class.&#10;It facilitates capture of expressions that are logical tests on a single operand ( e.g. operand [IsTrue|IsFalse]).&#10;Abstract class acting as a placeholder for a value supplied to an expression.&#10;There are two concrete specializations: PropertyRef - A reference to an external field object and the property on that object which together supply the value.&#10;Literal - A constant value that is supplied to the expression.&#10;A concrete specialization of the Operand abstract class.&#10;It permits property on external field objects to participate within expression evaluations.&#10;This class manages literal values i.e.&#10;numbers, with are one of the two kinds of operand involved in a MSLiteRule Expression.&#10;Greater Than, Less Than, Greater Than or Equals, Less Than or Equals, Equals, Not Equals.&#10;The following is an illustration of the expression representation and how the various classes relate to each other for the expression D1 Closed True And (FD1 Trig True Or FD2 Trig True).&#10;All expressions are represented as a chain of specialist expression objects navigated from left to right.&#10;This confers an efficiency bias in favor of left to right rule evaluation.&#10;In this case, the expression is comprised of two component expressions; D1 Closed = true conjoined with a compound expression embedded in parenthesis.&#10;Both are connected by a LogicalConnector using AND associative logic.&#10;The first component is a BinaryExpression composed of two operands which participate in a relational comparison operation in this case equals (could also be not equals, greater than etc...).&#10;The second component is a ParentheticalExpression acting as a container for a sub-expression, guaranteeing atomic evaluation of that sub-expression w.r.t.&#10;the container's surroundings.&#10;The sub-expression referenced can be a single BinaryExpression, or a chain of BinaryExpression objects and/or compound expressions.&#10;In this instance it is a chain of two BinaryExpression objects separated by an OR LogicalConnector.&#10;Both BinaryExpression and ParentheticalExpression types are specializations of the abstract Expression class.&#10;The Expression class is responsible for providing the ability for chaining expressions together by means of LogicalConnector objects.&#10;Prepare a hierarchy display for a logged-on user.&#10;This method prepares the object browser that displays the hierarchies owned by this user.&#10;It reconstructs the exact UI state from user preferences.&#10;This method must be called once for each user at logon.&#10;Store the hierarchy display's UI state in the user's preferences.&#10;Prepare a hierarchy display for a logged-on user.&#10;This method creates a UI which displays the hierarchies owned by this user.&#10;It displays the hierarchies in the order which they were persisted to the db.&#10;Displays a UI which allows a user to create hierarchies of Field Objects.&#10;Prepare a property display for a newly logged-on user.&#10;This method prepares the workspace that displays the properties of a field object selected in the hierarchy browser.&#10;It reconstructs the exact UI state from user preferences.&#10;This method must be called once for each user at logon.&#10;Store the property display's UI state in the user's preferences.&#10;Display a field object's properties and property values.&#10;This method uses the field object's template and instance to create the appropriate visual components for each property.&#10;Prepare an alarm display for a newly logged-on user.&#10;This method prepares the UI area that displays the alarms accessible to this user.&#10;It reconstructs the exact UI state from user preferences.&#10;This method must be called once for each user at logon.&#10;Store the alarm display's UI state in the user's preferences.&#10;Displays the alarm received in the user's screen.&#10;There are 3 possible cases.&#10;Alarm not ack: The alarm is a newly generated one.&#10;A new line with its info should be shown, and a popup window should appear to request acknowledgement.&#10;Alarm ack: The alarm is acknowledged.&#10;Its status should be changed.&#10;The remaining popup windows should be closed.&#10;Alarm dismissed: The alarm is eliminated.&#10;Its line should be removed from the alarm viewer.&#10;Used by the Web Frontend to notify the component that the changes since the last refresh are already consulted.&#10;Used by the Web Frontend to request an acknowledge operation for an alarm.&#10;Used by the Web Frontend to request a dismiss operation for an alarm.&#10;Register one display to receive notifications.&#10;The AlarmManager retrieves all the existing alarms from the AccessControl, and returns a list of the valid alarms.&#10;It also saves the display to deliver it further alarms.&#10;Checks which displays have access rights to this alarm and call the DisplayAlarm method for every one of them.&#10;Dismiss an alarm and delete it from the database.&#10;Prepare an alarm rule display when the Alarm tab is selected.&#10;This method prepares the UI area that displays the alarm rules accessible to this user.&#10;This method must be called once when the user clicks the LnR tab for the first time.&#10;Prepare an LnR rule display when the LnR tab is selected.&#10;This method prepares the UI area that displays the LnR rules accessible to this user.&#10;This method must be called once when the user clicks the LnR tab for the first time.&#10;This interface is to manage the lifecycle of the runtime alarm objects.&#10;register an alarm handler that will be called back when new alarms are created.&#10;This method is called from Presentation::Alarm Display.&#10;This interface is used to handle the subscription of events and cache of alarm rules.&#10;Notification that an alarm rule has been created.&#10;Update event subscriptions and cache accordingly.&#10;Notification that an alarm rule has been edited.&#10;Update event subscriptions and cache accordingly.&#10;Notification that an alarm rule has been deleted.&#10;Unsubscribe from events that are no longer relevant and remove rule from cache.&#10;Evaluation of alarm rules or L&amp;R rules based on a property and the supplied property value.&#10;This interface is used to handle the subscription of events and cache of L&amp;R rules.&#10;Notification that an L&amp;R rule has been created.&#10;Update event subscriptions and cache accordingly.&#10;Notification that an L&amp;R rule has been edited.&#10;Update event subscriptions and cache accordingly.&#10;Notification that an L&amp;R rule has been deleted.&#10;Unsubscribe from events that are no longer relevant and remove from cache.&#10;The event to publish.&#10;Currently the event can be either of type COV or NCOV.&#10;A COV events has as parameters the property ID and the new property value.&#10;An NCOV event has as parameters the token of the user trying to change the property value and the property ID.&#10;In case of a future extension to support alarms generated by the FSS there is a third event type ALARM with a propertyID (of the associated alarm property) and current property value as parameter.&#10;An object that implements the IEventHandler interface.&#10;It's handleEvent method is called if a subscribed event occurs.&#10;Subscribe an event handler to events for a list of properties.&#10;Unsubscribe an event handler from events for a list of properties.&#10;Unsubscribe an event handler from all events of a given type.&#10;A callback interface which event subscribers must implement to receive events.&#10;This interface is a callback interface that the FSS Adapters call to notify MSLite.&#10;Notification of a property value change from the FSS.&#10;Notification that the FSS did not change a property according to an issued command.&#10;A call to indicate to the Adapter Manager that an alarm event has been generated from an external system(e.g. FSS).&#10;A call issue an acknowledgement command to the FSS.&#10;An alarm call from the user to dismiss the alarm in the FSS.&#10;A call to initialize the Adapter Manager during startup.&#10;This interface handles the configuration of the FSS Adapters and FSSs.&#10;Retrieve the list of object templates from the initial structure of the FSS.&#10;Create and retrieve the list of object instances based on the initial structure of the FSS.&#10;To retrieve the set of initial property values from the FSS.&#10;Prepare a command to change the value of a property in the context of the user.&#10;acknowledge an alarm that originated in the FSS.&#10;Depending on the FSS this mthod may do nothing.&#10;Register a callback handler (the adapter manager) to receive COV notifications.&#10;Notification of a property value change from the FSS.&#10;Command processing may use this method to match commands and resulting value changes.&#10;Register a callback handler (the adapter manager) to receive COV notifications.&#10;Callback interface from the FSS code to receive COV events.&#10;Module Level1 Data.&#10;Note: The parameter &quot;token&quot; is always the user's authentication token.&#10;All methods that take a token as a parameter have an exception condition &quot;invalid token&quot; which indicates that the user is not logged on.&#10;Authenticate a user, assign an authentication token to the user, and store the user in a list of currently logged on users.&#10;The valid token is needed to access data.&#10;Remove the user from the list of logged on users and invalidate the authentication token.&#10;The token can no longer be used to access data.&#10;A call to initialize the Data Access module during startup.&#10;Create or update a user preference in the database.&#10;Get the names of all hierarchies of a user.&#10;Get a complete hierarchical view structure.&#10;Create or update a hierarchical view structure in the database.&#10;Get a list of all properties the user may access.&#10;Get a list of all field objects the user may access.&#10;Get the field object template for the field object with the given ID.&#10;Get the field object instance with the given ID.&#10;Get a list of alarms this user can acknowledge or dismiss.&#10;Get a specific alarm object.&#10;Create or update an alarm in the database.&#10;Delete an alarm from the database.&#10;Get all alarm rules from the database.&#10;Get a specific alarm rule.&#10;Get alarm rules that have the same condition as a given alarm rule.&#10;Create or update an alarm rule in the database.&#10;Delete an alarm rule from the database.&#10;Get all L&amp;R rules from the database.&#10;Get a specific L&amp;R rule.&#10;Get L&amp;R rules that have the same condition with the L&amp;R rule.&#10;Create or update an L&amp;R rule in the database.&#10;Delete an L&amp;R rule from the database.&#10;Get the user's permission for a specific property.&#10;A call to change the value of a property in a specific FSS.&#10;Forwards request to VirtualFSS AdapterManager.&#10;Clears all configuration in the Repository to avoid data redundancy.&#10;Create a field object template in memory.&#10;Create a field object instance in memory.&#10;Save the list of property values in memory.&#10;Configure the publish subscribe mechanism.&#10;A call to initialize the Value Cache during startup of MSLite.&#10;Save a property value in the cache.&#10;This method may change a value or create a new cache entry.&#10;Write an error entry in the logger with the default debug level (Informational).&#10;Write an error entry in the logger with the debug level passed in as a parameter.&#10;Write an audit entry in the logger with the default debug level.&#10;The audits include any events or service.&#10;Write an audit entry in the logger with the debug level passed in as a parameter.&#10;The audits include any.&#10;Sets the debug level for which the amount of information will be displayed in the log.&#10;The table below shows which interfaces are used by which modules.&#10;This is another view to help development teams to focus on specific interfaces that apply to their modules only.&#10;Behavioral view The behavioral specification specifies how the proposed architecture fulfills the functional requirements.&#10;UML 1.5 sequence diagrams have been used to document the behavior based on the module views from the Module view.&#10;The method calls shown in the diagrams are methods in the interfaces of the respective modules.&#10;Only method calls between modules are shown and not internal method calls.&#10;Where necessary, the internal processing inside a module is outlined in the accompanying description of the sequence diagram.&#10;Some sequence diagrams show interactions between FSS Adapter submodules and the FSS, but note that the details of these interactions are FSS specific.&#10;Arch/Behavioral Specification This section documents how the proposed architecture fulfills the functional requirements.&#10;UML 1.5 sequence diagrams have been used to document the behavior based on the module views from the Module view.&#10;The method calls shown in the diagrams are methods in the interfaces of the respective modules.&#10;Notes: Some sequence diagrams show interactions between FSS Adapter submodules and the FSS, but note that the details of these interactions are FSS specific.&#10;User interactions are indicated by pseudo method calls or textual description may indicate that the user has selected a field object on the UI and then clicked on a button to display this field object.&#10;Logon A user provides username and password as credentials.&#10;If the credentials are valid the Data Access module adds the user to a list of logged on users and assigns the user a unique token.&#10;This token is used during further operation to check permissions.&#10;The presentation module stores the token for the lifetime of a user's session.&#10;A user may be logged on in several sessions simultaneously.&#10;This behavior is necessary to handle the case where a user closes the browser without logging out of MSLite.&#10;When the session associated with the closed browser times out the presentation module logs the user out automatically.&#10;If a user logs on to MSLite the system performs the following initialization operations:, display all hierarchies of the user, restore the state of the object browser, restore the state of the work area, subscribe to events for currently displayed properties, show alarms currently in the system that the user can acknowledge.&#10;The Presentation module uses preference values to store all information needed to restore the user interface state.&#10;The Presentation module provides an individual event handler object for each user logged on to the system.&#10;To display the property values in the work area correctly the Property Display module must access the field object template and instance to get meta data that is used to create the user interface components for the field object properties.&#10;For example, if the property value is a string with a number of allowed values the user interface should display a component that allows the user to select one of the values.&#10;The allowed values are stored in the in the field object template.&#10;Logoff When a user logs off, the Presentation module stores hierarchy and property display state as necessary.&#10;The preference key-value pairs to store this information are to be defined in the Presentation submodules.&#10;In addition, Property Display unsubscribes the user's event handler from all events.&#10;Finally, Data Access removes the user form the list of logged on users, thus invalidating the token.&#10;Editing a Hierarchy Here we assume a simple case where a user selects a hierarchy for editing from the list of their hierarchies.&#10;Once the user selects a hierarchy the editor displays the current hierarchy and a list of all field objects the user has access to.&#10;There is no need to lock a hierarchy during editing because only one user - the hierarchy owner - has access to any given hierarchy.&#10;View Properties Displaying the properties and property values of a field object is initiated when the user selects a field object in a hierarchical view in the object browser.&#10;Property Display then updates event subscriptions for the user's session and reads property type data and current values from the repository.&#10;COV and NCOV subscriptions are for the same set of properties.&#10;Property type information is retrieved in the field object template data structure and current values are retrieved in the field object instance data structure.&#10;Property Display creates UI elements based on the property type information.&#10;The object template also contains access permissions for this user for each property in the field object.&#10;Issue Command This sequence starts with a user issuing a command to change a property value.&#10;There is no need to check if the user has write access to the property because the UI evaluates the user's access rights and enables editing only for those properties the user is actually allowed to change.&#10;The adapter manager forwards the command to the correct adapter.&#10;It does this by evaluating the property ID and maps the ID to the appropriate adapter.&#10;The Command Processing submodule in the adapter sends the command to the FSS using the simulator's protocol.&#10;After the value has changed the adapter manager creates an MSLite COV event from the COV notification and publishes that event.&#10;Depending on the FSS there are several options how the adapter can detect if a value change command is successful or not.&#10;The FSS responds with a change notification after the command has been executed successfully and does nothing if the command fails.&#10;This is the case shown in the previous diagram.&#10;It is the responsibility of Command Processing to match COV notifications and commands.&#10;The only way to detect failures is to implement a timeout mechanism that detects if there is no matching COV notification for a command.&#10;The FSS sends explicit failure notifications.&#10;This is shown in the sequence diagram below.&#10;In this scenario Command Processing must match the failure notification with the user token provided with the failed command.&#10;Depending on the FSS this matching process may be more or less complex.&#10;For example, if FSS commands carry a sequence number that is returned with the success or failure notification the matching is very simple.&#10;The Adapter Manager then creates the corresponding NCOV event.&#10;COV notifications are always send from COV Processing and NCOV notifications are always sent from Command processing.&#10;Alarm Rule The user initiates editing an alarm rule.&#10;The user requests to list all the alarms that he/she has access to.&#10;To retrieve the set of alarm rules, the user should have read access to all the properties in the rule and a write access to only the Associated Alarm Property.&#10;The Rule Editor is the module that handles all the functionality required to edit rules including alarm rules.&#10;The user when having a list of all alarms is now allowed to choose a specific rule for editing.&#10;The Rule Editor recognizes that the user wants to edit a rule and hence, retrieves all the properties based on the user's permissions.&#10;The user performs all the necessary editing to the rule and then saves it.&#10;The Rule Editor will perform two operations.&#10;Save the new alarm rule to the Repository.&#10;Notify the Alarm Rule Engine that a rule has been edited.&#10;After either of the operations, the user will get a confirmation that the rule has been edited.&#10;For the Alarm Rule Engine, the edited alarm rule triggers the system to subscribe or unsubscribe for specific COV events depending on the type of editing the user chose (creation, deletion, updating) and the properties involved in the rule.&#10;A list of all the rule objects in the system.&#10;Function to change the status (active/inactive) of rule.&#10;Function to delete the rule from the system.&#10;To duplicate an rule, allows the user to change alarm property.&#10;Function to initialize the display.&#10;An alarm rule object to store the created rule.&#10;Function to persist the alarm rule once validated by the system.&#10;To validate the syntax of rule.&#10;To check the datatypes of values entered by user, corresponding to the selected properties.&#10;To check whether the particular rule is not being edited in some other session.&#10;To display the appropriate conditional operators based on the property selected by the user.&#10;To retrieve and display all the field objects to which the user has access.&#10;Function to retrieve and display the properties based on the field object selected by user.&#10;Function to continuously monitor for addition or deletion of rules (*All function of this class to be implemented using Ajax).&#10;A list of all the rule objects in the system.&#10;Function to change the status(active/inactive) of rule.&#10;To duplicate an rule, allows the user to change reaction.&#10;Function to initialize the display.&#10;An LnR rule object to store the created rule.&#10;Function to persist the LnR rule once validated by the system.&#10;To validate the syntax of rule.&#10;To check the datatypes of values entered by user, corresponding to the selected properties.&#10;To check whether the particular rule is not being edited in some other session.&#10;To display the appropriate conditional operators based on the property selected by the user.&#10;To retrieve and display all the field objects to which the user has access.&#10;Function to retrieve and display the properties based on the field object selected by user.&#10;Function to continuously monitor for addition or deletion of rules (*All function of this class to be implemented using Ajax).&#10;The FSS notifies MSlite of a change of value on a property.&#10;The COV Processing is the first module in MSLite that receives notifications from the FSS.&#10;The COV Processing module performs translation of the FSS event to an MSLite notification.&#10;This translation of the notification data structure is based on the interface that is in the Adapter Manager.&#10;It then proceeds to notify the Adapter Manager that the FSS has notified MSLite of a value change in the property.&#10;The Adapter Manager collects the information and then proceeds to prepare it for publishing to the Publish-Subscribe module of MSLite.&#10;The Publish-Subscribe module upon receiving the event will notify the appropriate subscribers of the event.&#10;For this sequence diagram, all 4 subscribers(Property Display, Value Cache, Alarm Rule Engine, and L&amp;R Rule Engine) get notified concurrently.&#10;The Publish-Subscribe notifies the Alarm Rule Engine that a new COV event has been sent from the FSS to MSLite.&#10;The Alarm Rule Engine receives the COV event and inspects the message that identifies the property that had its value changed.&#10;The module will send all alarm rules with the property ID and the new value to Condition Evaluation to evaluate which rules need to be executed.&#10;Based on the number of properties that exist in a single rule, the Condition Evaluation will request a value for the properties from the Value Cache.&#10;After evaluating all the alarm rules, the Condition Evaluation will send back a set of rules that have to be executed in MSLite.&#10;Upon receiving the list of alarms to be executed, the Alarm Rule Engine then sends one rule at a time to the Alarm Processing.&#10;The Alarm Processing will then perform two operations in sequence.&#10;Generate alarm objects that will be persisted to the Repository.&#10;Notify the AlarmManager about these new alarm objects.&#10;The Alarm Rule Engine will continue to supply these rules to the Alarm Processing until there is no more alarms to be notified.&#10;The Alarm Manager notifies every Alarm Display with access rights the new generated alarm object.&#10;Alarm Display is responsible for displaying alarms to the user.&#10;The above behavior does not include the extensibility scenario whereby an FSS can generate alarms(E3).&#10;See the following diagram for this case.&#10;Based on FSS Alarms This behavior shows the actions taken by the MSLite system when the alarm is created from the FSS.&#10;The FSS notifies MSLite that an alarm has been generated internally and wishes to show the alarm to the users.&#10;The COV Processing is subscribed to receive this events from the FSS and hence gets notified of a new external alarm.&#10;It then translates the FSS alarm to an MSLite external alarm object.&#10;This is done to allow communication between other modules in MSLite.&#10;The COV Processing forwards this externalAlarmObject to the Adapter Manager in which it then forwards it to the Publish-Subscribe module after creating the appropriate alarm event.&#10;The Publish-Subscribe module notifies the Alarm Processing that a new alarm has been created in the FSS.&#10;It receives this alarm event and does two operations in sequence.&#10;Saves the alarm to the Repository.&#10;Notifies the Alarm Display that a new alarm has been created.&#10;The Alarm Display module proceeds to evaluate which users has access to the alarm by communicating with the Data Access module.&#10;This behavior is created to address the Extensibility Scenario - Extended FSS with Alarm and Function Commands (E3).&#10;Acknowledge Alarm The user acknowledges a specific alarm.&#10;The Alarm Display is responsible for taking in request from the user and thus sending an acknowledgement call to the AlarmManager with the user's valid token and the alarm object that is to be acknowledged.&#10;The AlarmManager does two operations in sequence.&#10;Acknowledges the call from the user and persists it to the Repository by modifying the alarm state to &quot;acknowledged&quot;.&#10;Sends an acknowledgement command to the FSS if the alarm was originating from the FSS instead of MSLite.&#10;Internally, this is done by sending the command to the Adapter Manager which forwards it to the appropriate Command Processing module for preparation.&#10;It then proceeds to issue the alarm command to the FSS.&#10;This operation is only possible if the FSS handles alarms and hence, addresses the Extensibility Scenario(E3).&#10;Only after all acknowledgements are done(both in MSLite and in FSS), will the user get a confirmation message saying that the acknowledgement operation has completed successfully.&#10;The AlarmManager module also update the user interfaces of all other users to show the alarm as acknowledged.&#10;Dismiss Alarm The user dismisses a specific alarm.&#10;The Alarm Display is responsible for taking in request from the user and thus sending an dismiss call to the AlarmManager with the user's valid token and the alarm object that is to be removed.&#10;The AlarmManager does three operations in sequence.&#10;Checks whether the user has write access right to the alarm and the alarm is already acknowledged.&#10;Dismisses the call from the user and persists it to the Repository by removing the alarm from it.&#10;Sends an dismiss command to the FSS if the alarm was originating from the FSS instead of MSLite.&#10;Internally, this is done by sending the command to the Adapter Manager which forwards it to the appropriate Command Processing module for preparation.&#10;It then proceeds to issue the alarm command to the FSS.&#10;This operation is only possible if the FSS handles alarms and hence, addresses the Extensibility Scenario(E3).&#10;Only after the dismiss process is done(both in MSLite and in FSS), will the user get a confirmation message saying that the dismissing operation has completed successfully.&#10;The AlarmManager module also update the user interfaces of all other users to remove the alarm from the display.&#10;Configuration Synchronization During startup of MSLite, the system has to be synchronized with the FSSs in terms of the field objects and their respective property values.&#10;Before any synchronization occurs, MSLite will clear all configurations and hence will avoid any duplications or complexity in code to handle data redundancy.&#10;One requirement for MSLite is to know exactly where the Adapters in MSLite reside.&#10;For synchronization the steps are.&#10;Retrieve all object templates that reside in the FSS configuration file via the Configuration module.&#10;Persist these templates into the database.&#10;Retrieve all object instances based on the object templates via the Configuration Module.&#10;This includes all properties for the associated object instance.&#10;Retrieve property values from the FSS via the Configuration module.&#10;It then saves all properties and their values to the Value Cache module.&#10;This behavior is a prerequisite for running the system.&#10;MSLite Startup This diagram shows what happens when an administrator starts MSLite.&#10;We assume that the field system simulators, web server, and the database service are already running.&#10;We assume further that it is preferable to manually start the executables for the processes that make up MSLite to have more control over the system.&#10;The first step is to start up the MSLite server process.&#10;Which initializes the adapter manager and value cache.&#10;The adapter manager instantiates adapters for each FSS according to the system configuration.&#10;This also includes reading the FSS configuration into MSLite as shown in the previous section Configuration.&#10;Initialization of the value cache includes that the value cache subscribes to all COV events for all properties.&#10;Next the Alarm and L&amp;R processes are started.&#10;Both processes retrieve the respective rules and subscribe to COV events for properties that occur in their respective rule sets."/>
    <type7:Sentence xmi:id="138190" sofa="8" begin="0" end="77"/>
    <type7:Sentence xmi:id="138677" sofa="8" begin="78" end="178"/>
    <type7:Sentence xmi:id="139203" sofa="8" begin="179" end="249"/>
    <type7:Sentence xmi:id="139580" sofa="8" begin="250" end="613"/>
    <type7:Sentence xmi:id="141672" sofa="8" begin="614" end="693"/>
    <type7:Sentence xmi:id="142081" sofa="8" begin="694" end="855"/>
    <type7:Sentence xmi:id="142922" sofa="8" begin="856" end="1010"/>
    <type7:Sentence xmi:id="143925" sofa="8" begin="1011" end="1273"/>
    <type7:Sentence xmi:id="145281" sofa="8" begin="1274" end="1399"/>
    <type7:Sentence xmi:id="146156" sofa="8" begin="1400" end="1638"/>
    <type7:Sentence xmi:id="147444" sofa="8" begin="1639" end="1811"/>
    <type7:Sentence xmi:id="148393" sofa="8" begin="1812" end="2034"/>
    <type7:Sentence xmi:id="149885" sofa="8" begin="2035" end="2129"/>
    <type7:Sentence xmi:id="150417" sofa="8" begin="2130" end="2198"/>
    <type7:Sentence xmi:id="150913" sofa="8" begin="2199" end="2307"/>
    <type7:Sentence xmi:id="151729" sofa="8" begin="2308" end="2415"/>
    <type7:Sentence xmi:id="152297" sofa="8" begin="2416" end="2544"/>
    <type7:Sentence xmi:id="152926" sofa="8" begin="2545" end="2768"/>
    <type7:Sentence xmi:id="154208" sofa="8" begin="2769" end="2833"/>
    <type7:Sentence xmi:id="154585" sofa="8" begin="2834" end="2895"/>
    <type7:Sentence xmi:id="154936" sofa="8" begin="2896" end="2969"/>
    <type7:Sentence xmi:id="155365" sofa="8" begin="2970" end="3084"/>
    <type7:Sentence xmi:id="156143" sofa="8" begin="3085" end="3156"/>
    <type7:Sentence xmi:id="156582" sofa="8" begin="3157" end="3264"/>
    <type7:Sentence xmi:id="157231" sofa="8" begin="3265" end="3336"/>
    <type7:Sentence xmi:id="157673" sofa="8" begin="3337" end="3388"/>
    <type7:Sentence xmi:id="157976" sofa="8" begin="3389" end="3440"/>
    <type7:Sentence xmi:id="158282" sofa="8" begin="3441" end="3475"/>
    <type7:Sentence xmi:id="158449" sofa="8" begin="3476" end="3511"/>
    <type7:Sentence xmi:id="158629" sofa="8" begin="3512" end="3565"/>
    <type7:Sentence xmi:id="158912" sofa="8" begin="3566" end="3653"/>
    <type7:Sentence xmi:id="159606" sofa="8" begin="3654" end="3764"/>
    <type7:Sentence xmi:id="160410" sofa="8" begin="3765" end="3880"/>
    <type7:Sentence xmi:id="161010" sofa="8" begin="3881" end="3986"/>
    <type7:Sentence xmi:id="161601" sofa="8" begin="3987" end="4016"/>
    <type7:Sentence xmi:id="161888" sofa="8" begin="4017" end="4058"/>
    <type7:Sentence xmi:id="162149" sofa="8" begin="4059" end="4101"/>
    <type7:Sentence xmi:id="162384" sofa="8" begin="4102" end="4125"/>
    <type7:Sentence xmi:id="162522" sofa="8" begin="4126" end="4182"/>
    <type7:Sentence xmi:id="162899" sofa="8" begin="4183" end="4254"/>
    <type7:Sentence xmi:id="163477" sofa="8" begin="4255" end="4427"/>
    <type7:Sentence xmi:id="164776" sofa="8" begin="4428" end="4528"/>
    <type7:Sentence xmi:id="165399" sofa="8" begin="4529" end="4624"/>
    <type7:Sentence xmi:id="165983" sofa="8" begin="4625" end="4705"/>
    <type7:Sentence xmi:id="166530" sofa="8" begin="4706" end="4776"/>
    <type7:Sentence xmi:id="166936" sofa="8" begin="4777" end="4856"/>
    <type7:Sentence xmi:id="167458" sofa="8" begin="4857" end="4914"/>
    <type7:Sentence xmi:id="167848" sofa="8" begin="4915" end="4981"/>
    <type7:Sentence xmi:id="168222" sofa="8" begin="4982" end="5028"/>
    <type7:Sentence xmi:id="168483" sofa="8" begin="5029" end="5140"/>
    <type7:Sentence xmi:id="169326" sofa="8" begin="5141" end="5263"/>
    <type7:Sentence xmi:id="170114" sofa="8" begin="5264" end="5356"/>
    <type7:Sentence xmi:id="170656" sofa="8" begin="5357" end="5498"/>
    <type7:Sentence xmi:id="171434" sofa="8" begin="5499" end="5595"/>
    <type7:Sentence xmi:id="172018" sofa="8" begin="5596" end="5670"/>
    <type7:Sentence xmi:id="172476" sofa="8" begin="5671" end="5861"/>
    <type7:Sentence xmi:id="173727" sofa="8" begin="5862" end="5946"/>
    <type7:Sentence xmi:id="174266" sofa="8" begin="5947" end="5992"/>
    <type7:Sentence xmi:id="174572" sofa="8" begin="5993" end="6036"/>
    <type7:Sentence xmi:id="174833" sofa="8" begin="6037" end="6096"/>
    <type7:Sentence xmi:id="175213" sofa="8" begin="6097" end="6174"/>
    <type7:Sentence xmi:id="175713" sofa="8" begin="6175" end="6228"/>
    <type7:Sentence xmi:id="176045" sofa="8" begin="6229" end="6400"/>
    <type7:Sentence xmi:id="177196" sofa="8" begin="6401" end="6498"/>
    <type7:Sentence xmi:id="177780" sofa="8" begin="6499" end="6716"/>
    <type7:Sentence xmi:id="179220" sofa="8" begin="6717" end="6767"/>
    <type7:Sentence xmi:id="179526" sofa="8" begin="6768" end="6841"/>
    <type7:Sentence xmi:id="179981" sofa="8" begin="6842" end="6982"/>
    <type7:Sentence xmi:id="180824" sofa="8" begin="6983" end="7118"/>
    <type7:Sentence xmi:id="181641" sofa="8" begin="7119" end="7351"/>
    <type7:Sentence xmi:id="182983" sofa="8" begin="7352" end="7503"/>
    <type7:Sentence xmi:id="183985" sofa="8" begin="7504" end="7622"/>
    <type7:Sentence xmi:id="184760" sofa="8" begin="7623" end="7809"/>
    <type7:Sentence xmi:id="185977" sofa="8" begin="7810" end="7948"/>
    <type7:Sentence xmi:id="186904" sofa="8" begin="7949" end="8031"/>
    <type7:Sentence xmi:id="187378" sofa="8" begin="8032" end="8169"/>
    <type7:Sentence xmi:id="188538" sofa="8" begin="8170" end="8235"/>
    <type7:Sentence xmi:id="189025" sofa="8" begin="8236" end="8321"/>
    <type7:Sentence xmi:id="189732" sofa="8" begin="8322" end="8389"/>
    <type7:Sentence xmi:id="190203" sofa="8" begin="8390" end="8562"/>
    <type7:Sentence xmi:id="191425" sofa="8" begin="8563" end="8680"/>
    <type7:Sentence xmi:id="192170" sofa="8" begin="8681" end="8745"/>
    <type7:Sentence xmi:id="192625" sofa="8" begin="8746" end="8860"/>
    <type7:Sentence xmi:id="193363" sofa="8" begin="8861" end="8995"/>
    <type7:Sentence xmi:id="194290" sofa="8" begin="8996" end="9078"/>
    <type7:Sentence xmi:id="194764" sofa="8" begin="9079" end="9128"/>
    <type7:Sentence xmi:id="195112" sofa="8" begin="9129" end="9229"/>
    <type7:Sentence xmi:id="195906" sofa="8" begin="9230" end="9328"/>
    <type7:Sentence xmi:id="196519" sofa="8" begin="9329" end="9443"/>
    <type7:Sentence xmi:id="197206" sofa="8" begin="9444" end="9503"/>
    <type7:Sentence xmi:id="197619" sofa="8" begin="9504" end="9544"/>
    <type7:Sentence xmi:id="197854" sofa="8" begin="9545" end="9686"/>
    <type7:Sentence xmi:id="198729" sofa="8" begin="9687" end="9752"/>
    <type7:Sentence xmi:id="199145" sofa="8" begin="9753" end="9840"/>
    <type7:Sentence xmi:id="199561" sofa="8" begin="9841" end="10089"/>
    <type7:Sentence xmi:id="201204" sofa="8" begin="10090" end="10188"/>
    <type7:Sentence xmi:id="201817" sofa="8" begin="10189" end="10323"/>
    <type7:Sentence xmi:id="202905" sofa="8" begin="10324" end="10422"/>
    <type7:Sentence xmi:id="203518" sofa="8" begin="10423" end="10593"/>
    <type7:Sentence xmi:id="204574" sofa="8" begin="10594" end="10643"/>
    <type7:Sentence xmi:id="204851" sofa="8" begin="10644" end="10769"/>
    <type7:Sentence xmi:id="205684" sofa="8" begin="10770" end="10893"/>
    <type7:Sentence xmi:id="206614" sofa="8" begin="10894" end="11038"/>
    <type7:Sentence xmi:id="207673" sofa="8" begin="11039" end="11158"/>
    <type7:Sentence xmi:id="208506" sofa="8" begin="11159" end="11302"/>
    <type7:Sentence xmi:id="209310" sofa="8" begin="11303" end="11345"/>
    <type7:Sentence xmi:id="209587" sofa="8" begin="11346" end="11508"/>
    <type7:Sentence xmi:id="210604" sofa="8" begin="11509" end="11546"/>
    <type7:Sentence xmi:id="210865" sofa="8" begin="11547" end="11596"/>
    <type7:Sentence xmi:id="211158" sofa="8" begin="11597" end="11712"/>
    <type7:Sentence xmi:id="211926" sofa="8" begin="11713" end="11798"/>
    <type7:Sentence xmi:id="212426" sofa="8" begin="11799" end="11883"/>
    <type7:Sentence xmi:id="213036" sofa="8" begin="11884" end="11972"/>
    <type7:Sentence xmi:id="213575" sofa="8" begin="11973" end="12066"/>
    <type7:Sentence xmi:id="214191" sofa="8" begin="12067" end="12219"/>
    <type7:Sentence xmi:id="215337" sofa="8" begin="12220" end="12304"/>
    <type7:Sentence xmi:id="215853" sofa="8" begin="12305" end="12499"/>
    <type7:Sentence xmi:id="217273" sofa="8" begin="12500" end="12577"/>
    <type7:Sentence xmi:id="217676" sofa="8" begin="12578" end="12714"/>
    <type7:Sentence xmi:id="218579" sofa="8" begin="12715" end="12866"/>
    <type7:Sentence xmi:id="219605" sofa="8" begin="12867" end="12949"/>
    <type7:Sentence xmi:id="220027" sofa="8" begin="12950" end="13061"/>
    <type7:Sentence xmi:id="220698" sofa="8" begin="13062" end="13133"/>
    <type7:Sentence xmi:id="221075" sofa="8" begin="13134" end="13288"/>
    <type7:Sentence xmi:id="221979" sofa="8" begin="13289" end="13417"/>
    <type7:Sentence xmi:id="222818" sofa="8" begin="13418" end="13546"/>
    <type7:Sentence xmi:id="223729" sofa="8" begin="13547" end="13579"/>
    <type7:Sentence xmi:id="224019" sofa="8" begin="13580" end="13633"/>
    <type7:Sentence xmi:id="224351" sofa="8" begin="13634" end="13685"/>
    <type7:Sentence xmi:id="224767" sofa="8" begin="13686" end="13828"/>
    <type7:Sentence xmi:id="225629" sofa="8" begin="13829" end="13977"/>
    <type7:Sentence xmi:id="226497" sofa="8" begin="13978" end="14056"/>
    <type7:Sentence xmi:id="226942" sofa="8" begin="14057" end="14176"/>
    <type7:Sentence xmi:id="227882" sofa="8" begin="14177" end="14253"/>
    <type7:Sentence xmi:id="228421" sofa="8" begin="14254" end="14410"/>
    <type7:Sentence xmi:id="229548" sofa="8" begin="14411" end="14544"/>
    <type7:Sentence xmi:id="230614" sofa="8" begin="14545" end="14723"/>
    <type7:Sentence xmi:id="231782" sofa="8" begin="14724" end="14894"/>
    <type7:Sentence xmi:id="232812" sofa="8" begin="14895" end="15033"/>
    <type7:Sentence xmi:id="233768" sofa="8" begin="15034" end="15132"/>
    <type7:Sentence xmi:id="234449" sofa="8" begin="15133" end="15295"/>
    <type7:Sentence xmi:id="235413" sofa="8" begin="15296" end="15436"/>
    <type7:Sentence xmi:id="236236" sofa="8" begin="15437" end="15554"/>
    <type7:Sentence xmi:id="237040" sofa="8" begin="15555" end="15734"/>
    <type7:Sentence xmi:id="238229" sofa="8" begin="15735" end="15801"/>
    <type7:Sentence xmi:id="238632" sofa="8" begin="15802" end="15926"/>
    <type7:Sentence xmi:id="239400" sofa="8" begin="15927" end="15984"/>
    <type7:Sentence xmi:id="239790" sofa="8" begin="15985" end="16162"/>
    <type7:Sentence xmi:id="240859" sofa="8" begin="16163" end="16253"/>
    <type7:Sentence xmi:id="241514" sofa="8" begin="16254" end="16438"/>
    <type7:Sentence xmi:id="242750" sofa="8" begin="16439" end="16506"/>
    <type7:Sentence xmi:id="243114" sofa="8" begin="16507" end="16652"/>
    <type7:Sentence xmi:id="243960" sofa="8" begin="16653" end="16732"/>
    <type7:Sentence xmi:id="244337" sofa="8" begin="16733" end="16857"/>
    <type7:Sentence xmi:id="245105" sofa="8" begin="16858" end="16915"/>
    <type7:Sentence xmi:id="245495" sofa="8" begin="16916" end="17093"/>
    <type7:Sentence xmi:id="246564" sofa="8" begin="17094" end="17184"/>
    <type7:Sentence xmi:id="247219" sofa="8" begin="17185" end="17289"/>
    <type7:Sentence xmi:id="247874" sofa="8" begin="17290" end="17392"/>
    <type7:Sentence xmi:id="248539" sofa="8" begin="17393" end="17446"/>
    <type7:Sentence xmi:id="248887" sofa="8" begin="17447" end="17535"/>
    <type7:Sentence xmi:id="249432" sofa="8" begin="17536" end="17686"/>
    <type7:Sentence xmi:id="250361" sofa="8" begin="17687" end="17861"/>
    <type7:Sentence xmi:id="251495" sofa="8" begin="17862" end="18007"/>
    <type7:Sentence xmi:id="252399" sofa="8" begin="18008" end="18090"/>
    <type7:Sentence xmi:id="252922" sofa="8" begin="18091" end="18143"/>
    <type7:Sentence xmi:id="253264" sofa="8" begin="18144" end="18207"/>
    <type7:Sentence xmi:id="253732" sofa="8" begin="18208" end="18300"/>
    <type7:Sentence xmi:id="254284" sofa="8" begin="18301" end="18361"/>
    <type7:Sentence xmi:id="254600" sofa="8" begin="18362" end="18437"/>
    <type7:Sentence xmi:id="255152" sofa="8" begin="18438" end="18588"/>
    <type7:Sentence xmi:id="256046" sofa="8" begin="18589" end="18724"/>
    <type7:Sentence xmi:id="256853" sofa="8" begin="18725" end="18929"/>
    <type7:Sentence xmi:id="258197" sofa="8" begin="18930" end="18996"/>
    <type7:Sentence xmi:id="258600" sofa="8" begin="18997" end="19065"/>
    <type7:Sentence xmi:id="259006" sofa="8" begin="19066" end="19199"/>
    <type7:Sentence xmi:id="259865" sofa="8" begin="19200" end="19333"/>
    <type7:Sentence xmi:id="260604" sofa="8" begin="19334" end="19393"/>
    <type7:Sentence xmi:id="260997" sofa="8" begin="19394" end="19468"/>
    <type7:Sentence xmi:id="261539" sofa="8" begin="19469" end="19536"/>
    <type7:Sentence xmi:id="262020" sofa="8" begin="19537" end="19733"/>
    <type7:Sentence xmi:id="263477" sofa="8" begin="19734" end="19925"/>
    <type7:Sentence xmi:id="264720" sofa="8" begin="19926" end="20049"/>
    <type7:Sentence xmi:id="265524" sofa="8" begin="20050" end="20226"/>
    <type7:Sentence xmi:id="266661" sofa="8" begin="20227" end="20348"/>
    <type7:Sentence xmi:id="267403" sofa="8" begin="20349" end="20442"/>
    <type7:Sentence xmi:id="268032" sofa="8" begin="20443" end="20513"/>
    <type7:Sentence xmi:id="268467" sofa="8" begin="20514" end="20605"/>
    <type7:Sentence xmi:id="269077" sofa="8" begin="20606" end="20678"/>
    <type7:Sentence xmi:id="269538" sofa="8" begin="20679" end="20732"/>
    <type7:Sentence xmi:id="269831" sofa="8" begin="20733" end="20869"/>
    <type7:Sentence xmi:id="270680" sofa="8" begin="20870" end="21014"/>
    <type7:Sentence xmi:id="271697" sofa="8" begin="21015" end="21149"/>
    <type7:Sentence xmi:id="272465" sofa="8" begin="21150" end="21280"/>
    <type7:Sentence xmi:id="273378" sofa="8" begin="21281" end="21334"/>
    <type7:Sentence xmi:id="273800" sofa="8" begin="21335" end="21435"/>
    <type7:Sentence xmi:id="274497" sofa="8" begin="21436" end="21538"/>
    <type7:Sentence xmi:id="275113" sofa="8" begin="21539" end="21604"/>
    <type7:Sentence xmi:id="275464" sofa="8" begin="21605" end="21638"/>
    <type7:Sentence xmi:id="275699" sofa="8" begin="21639" end="21682"/>
    <type7:Sentence xmi:id="275992" sofa="8" begin="21683" end="21749"/>
    <type7:Sentence xmi:id="276395" sofa="8" begin="21750" end="21836"/>
    <type7:Sentence xmi:id="276924" sofa="8" begin="21837" end="21950"/>
    <type7:Sentence xmi:id="277592" sofa="8" begin="21951" end="22076"/>
    <type7:Sentence xmi:id="278292" sofa="8" begin="22077" end="22220"/>
    <type7:Sentence xmi:id="279235" sofa="8" begin="22221" end="22356"/>
    <type7:Sentence xmi:id="280223" sofa="8" begin="22357" end="22451"/>
    <type7:Sentence xmi:id="280833" sofa="8" begin="22452" end="22616"/>
    <type7:Sentence xmi:id="281847" sofa="8" begin="22617" end="22690"/>
    <type7:Sentence xmi:id="282208" sofa="8" begin="22691" end="22808"/>
    <type7:Sentence xmi:id="282818" sofa="8" begin="22809" end="22931"/>
    <type7:Sentence xmi:id="283664" sofa="8" begin="22932" end="23041"/>
    <type7:Sentence xmi:id="284442" sofa="8" begin="23042" end="23105"/>
    <type7:Sentence xmi:id="284900" sofa="8" begin="23106" end="23289"/>
    <type7:Sentence xmi:id="286063" sofa="8" begin="23290" end="23342"/>
    <type7:Sentence xmi:id="286350" sofa="8" begin="23343" end="23426"/>
    <type7:Sentence xmi:id="286811" sofa="8" begin="23427" end="23496"/>
    <type7:Sentence xmi:id="287249" sofa="8" begin="23497" end="23573"/>
    <type7:Sentence xmi:id="287678" sofa="8" begin="23574" end="23656"/>
    <type7:Sentence xmi:id="288265" sofa="8" begin="23657" end="23759"/>
    <type7:Sentence xmi:id="288884" sofa="8" begin="23760" end="23847"/>
    <type7:Sentence xmi:id="289422" sofa="8" begin="23848" end="23905"/>
    <type7:Sentence xmi:id="289757" sofa="8" begin="23906" end="23946"/>
    <type7:Sentence xmi:id="290060" sofa="8" begin="23947" end="23988"/>
    <type7:Sentence xmi:id="290402" sofa="8" begin="23989" end="24055"/>
    <type7:Sentence xmi:id="290821" sofa="8" begin="24056" end="24105"/>
    <type7:Sentence xmi:id="291098" sofa="8" begin="24106" end="24185"/>
    <type7:Sentence xmi:id="291543" sofa="8" begin="24186" end="24341"/>
    <type7:Sentence xmi:id="292486" sofa="8" begin="24342" end="24431"/>
    <type7:Sentence xmi:id="293051" sofa="8" begin="24432" end="24516"/>
    <type7:Sentence xmi:id="293632" sofa="8" begin="24517" end="24598"/>
    <type7:Sentence xmi:id="294155" sofa="8" begin="24599" end="24651"/>
    <type7:Sentence xmi:id="294461" sofa="8" begin="24652" end="24713"/>
    <type7:Sentence xmi:id="294803" sofa="8" begin="24714" end="24843"/>
    <type7:Sentence xmi:id="295720" sofa="8" begin="24844" end="24935"/>
    <type7:Sentence xmi:id="296391" sofa="8" begin="24936" end="24978"/>
    <type7:Sentence xmi:id="296726" sofa="8" begin="24979" end="25022"/>
    <type7:Sentence xmi:id="296990" sofa="8" begin="25023" end="25060"/>
    <type7:Sentence xmi:id="297238" sofa="8" begin="25061" end="25164"/>
    <type7:Sentence xmi:id="297942" sofa="8" begin="25165" end="25263"/>
    <type7:Sentence xmi:id="298626" sofa="8" begin="25264" end="25357"/>
    <type7:Sentence xmi:id="299255" sofa="8" begin="25358" end="25444"/>
    <type7:Sentence xmi:id="299923" sofa="8" begin="25445" end="25503"/>
    <type7:Sentence xmi:id="300268" sofa="8" begin="25504" end="25617"/>
    <type7:Sentence xmi:id="301123" sofa="8" begin="25618" end="25658"/>
    <type7:Sentence xmi:id="301458" sofa="8" begin="25659" end="25700"/>
    <type7:Sentence xmi:id="301722" sofa="8" begin="25701" end="25736"/>
    <type7:Sentence xmi:id="301970" sofa="8" begin="25737" end="25754"/>
    <type7:Sentence xmi:id="302079" sofa="8" begin="25755" end="25888"/>
    <type7:Sentence xmi:id="302915" sofa="8" begin="25889" end="25957"/>
    <type7:Sentence xmi:id="303302" sofa="8" begin="25958" end="26047"/>
    <type7:Sentence xmi:id="303773" sofa="8" begin="26048" end="26100"/>
    <type7:Sentence xmi:id="304115" sofa="8" begin="26101" end="26193"/>
    <type7:Sentence xmi:id="304618" sofa="8" begin="26194" end="26312"/>
    <type7:Sentence xmi:id="305302" sofa="8" begin="26313" end="26420"/>
    <type7:Sentence xmi:id="306080" sofa="8" begin="26421" end="26577"/>
    <type7:Sentence xmi:id="306997" sofa="8" begin="26578" end="26730"/>
    <type7:Sentence xmi:id="307966" sofa="8" begin="26731" end="26878"/>
    <type7:Sentence xmi:id="309009" sofa="8" begin="26879" end="26968"/>
    <type7:Sentence xmi:id="309428" sofa="8" begin="26969" end="27076"/>
    <type7:Sentence xmi:id="310070" sofa="8" begin="27077" end="27194"/>
    <type7:Sentence xmi:id="310793" sofa="8" begin="27195" end="27378"/>
    <type7:Sentence xmi:id="311981" sofa="8" begin="27379" end="27455"/>
    <type7:Sentence xmi:id="312442" sofa="8" begin="27456" end="27612"/>
    <type7:Sentence xmi:id="313479" sofa="8" begin="27613" end="27758"/>
    <type7:Sentence xmi:id="314389" sofa="8" begin="27759" end="27941"/>
    <type7:Sentence xmi:id="315606" sofa="8" begin="27942" end="28150"/>
    <type7:Sentence xmi:id="317017" sofa="8" begin="28151" end="28396"/>
    <type7:Sentence xmi:id="318547" sofa="8" begin="28397" end="28542"/>
    <type7:Sentence xmi:id="319487" sofa="8" begin="28543" end="28716"/>
    <type7:Sentence xmi:id="320530" sofa="8" begin="28717" end="28895"/>
    <type7:Sentence xmi:id="321479" sofa="8" begin="28896" end="28991"/>
    <type7:Sentence xmi:id="322114" sofa="8" begin="28992" end="29190"/>
    <type7:Sentence xmi:id="323425" sofa="8" begin="29191" end="29252"/>
    <type7:Sentence xmi:id="323828" sofa="8" begin="29253" end="29354"/>
    <type7:Sentence xmi:id="324457" sofa="8" begin="29355" end="29463"/>
    <type7:Sentence xmi:id="325086" sofa="8" begin="29464" end="29515"/>
    <type7:Sentence xmi:id="325473" sofa="8" begin="29516" end="29613"/>
    <type7:Sentence xmi:id="326005" sofa="8" begin="29614" end="29697"/>
    <type7:Sentence xmi:id="326615" sofa="8" begin="29698" end="29780"/>
    <type7:Sentence xmi:id="327102" sofa="8" begin="29781" end="29905"/>
    <type7:Sentence xmi:id="327857" sofa="8" begin="29906" end="29954"/>
    <type7:Sentence xmi:id="328189" sofa="8" begin="29955" end="30057"/>
    <type7:Sentence xmi:id="328847" sofa="8" begin="30058" end="30165"/>
    <type7:Sentence xmi:id="329590" sofa="8" begin="30166" end="30425"/>
    <type7:Sentence xmi:id="331172" sofa="8" begin="30426" end="30533"/>
    <type7:Sentence xmi:id="331908" sofa="8" begin="30534" end="30659"/>
    <type7:Sentence xmi:id="332734" sofa="8" begin="30660" end="30739"/>
    <type7:Sentence xmi:id="333276" sofa="8" begin="30740" end="30851"/>
    <type7:Sentence xmi:id="334135" sofa="8" begin="30852" end="30949"/>
    <type7:Sentence xmi:id="334703" sofa="8" begin="30950" end="31091"/>
    <type7:Sentence xmi:id="335513" sofa="8" begin="31092" end="31132"/>
    <type7:Sentence xmi:id="335748" sofa="8" begin="31133" end="31174"/>
    <type7:Sentence xmi:id="335996" sofa="8" begin="31175" end="31227"/>
    <type7:Sentence xmi:id="336328" sofa="8" begin="31228" end="31311"/>
    <type7:Sentence xmi:id="336802" sofa="8" begin="31312" end="31571"/>
    <type7:Sentence xmi:id="338384" sofa="8" begin="31572" end="31663"/>
    <type7:Sentence xmi:id="338952" sofa="8" begin="31664" end="31779"/>
    <type7:Sentence xmi:id="339639" sofa="8" begin="31780" end="31896"/>
    <type7:Sentence xmi:id="340359" sofa="8" begin="31897" end="31994"/>
    <type7:Sentence xmi:id="340927" sofa="8" begin="31995" end="32136"/>
    <type7:Sentence xmi:id="341737" sofa="8" begin="32137" end="32275"/>
    <type7:Sentence xmi:id="342806" sofa="8" begin="32276" end="32412"/>
    <type7:Sentence xmi:id="343616" sofa="8" begin="32413" end="32465"/>
    <type7:Sentence xmi:id="343854" sofa="8" begin="32466" end="32566"/>
    <type7:Sentence xmi:id="344516" sofa="8" begin="32567" end="32688"/>
    <type7:Sentence xmi:id="345255" sofa="8" begin="32689" end="32737"/>
    <type7:Sentence xmi:id="345632" sofa="8" begin="32738" end="32831"/>
    <type7:Sentence xmi:id="346239" sofa="8" begin="32832" end="32999"/>
    <type7:Sentence xmi:id="347321" sofa="8" begin="33000" end="33085"/>
    <type7:Sentence xmi:id="347866" sofa="8" begin="33086" end="33206"/>
    <type7:Sentence xmi:id="348576" sofa="8" begin="33207" end="33255"/>
    <type7:Sentence xmi:id="348846" sofa="8" begin="33256" end="33418"/>
    <type7:Sentence xmi:id="349789" sofa="8" begin="33419" end="33508"/>
    <type7:Sentence xmi:id="350357" sofa="8" begin="33509" end="33703"/>
    <type7:Sentence xmi:id="351581" sofa="8" begin="33704" end="33815"/>
    <type7:Sentence xmi:id="352168" sofa="8" begin="33816" end="33920"/>
    <type7:Sentence xmi:id="352771" sofa="8" begin="33921" end="33968"/>
    <type7:Sentence xmi:id="353129" sofa="8" begin="33969" end="34031"/>
    <type7:Sentence xmi:id="353624" sofa="8" begin="34032" end="34160"/>
    <type7:Sentence xmi:id="354608" sofa="8" begin="34161" end="34226"/>
    <type7:Sentence xmi:id="355021" sofa="8" begin="34227" end="34411"/>
    <type7:Sentence xmi:id="356241" sofa="8" begin="34412" end="34526"/>
    <type7:Sentence xmi:id="357113" sofa="8" begin="34527" end="34619"/>
    <type7:Sentence xmi:id="357658" sofa="8" begin="34620" end="34677"/>
    <type7:Sentence xmi:id="358077" sofa="8" begin="34678" end="34742"/>
    <type7:Sentence xmi:id="358572" sofa="8" begin="34743" end="34871"/>
    <type7:Sentence xmi:id="359556" sofa="8" begin="34872" end="34937"/>
    <type7:Sentence xmi:id="359969" sofa="8" begin="34938" end="35122"/>
    <type7:Sentence xmi:id="361189" sofa="8" begin="35123" end="35237"/>
    <type7:Sentence xmi:id="362061" sofa="8" begin="35238" end="35328"/>
    <type7:Sentence xmi:id="362590" sofa="8" begin="35329" end="35411"/>
    <type7:Sentence xmi:id="363074" sofa="8" begin="35412" end="35473"/>
    <type7:Sentence xmi:id="363506" sofa="8" begin="35474" end="35614"/>
    <type7:Sentence xmi:id="364313" sofa="8" begin="35615" end="35809"/>
    <type7:Sentence xmi:id="365482" sofa="8" begin="35810" end="35939"/>
    <type7:Sentence xmi:id="366263" sofa="8" begin="35940" end="36079"/>
    <type7:Sentence xmi:id="366944" sofa="8" begin="36080" end="36176"/>
    <type7:Sentence xmi:id="367677" sofa="8" begin="36177" end="36437"/>
    <type7:Sentence xmi:id="369382" sofa="8" begin="36438" end="36584"/>
    <type7:Sentence xmi:id="370341" sofa="8" begin="36585" end="36678"/>
    <type7:Sentence xmi:id="371080" sofa="8" begin="36679" end="36884"/>
    <type7:Sentence xmi:id="372323" sofa="8" begin="36885" end="36939"/>
    <type7:Sentence xmi:id="372723" sofa="8" begin="36940" end="37004"/>
    <type7:Sentence xmi:id="373136" sofa="8" begin="37005" end="37106"/>
    <type7:Sentence xmi:id="373843" sofa="8" begin="37107" end="37159"/>
    <type7:Sentence xmi:id="374220" sofa="8" begin="37160" end="37464"/>
    <type7:Sentence xmi:id="376284" sofa="8" begin="37465" end="37593"/>
    <type7:Sentence xmi:id="376933" sofa="8" begin="37594" end="37672"/>
    <type7:Sentence xmi:id="377381" sofa="8" begin="37673" end="37715"/>
    <type7:Sentence xmi:id="377703" sofa="8" begin="37716" end="37754"/>
    <type7:Sentence xmi:id="377944" sofa="8" begin="37755" end="37796"/>
    <type7:Sentence xmi:id="378214" sofa="8" begin="37797" end="37837"/>
    <type7:Sentence xmi:id="378462" sofa="8" begin="37838" end="37870"/>
    <type7:Sentence xmi:id="378600" sofa="8" begin="37871" end="37911"/>
    <type7:Sentence xmi:id="378809" sofa="8" begin="37912" end="38016"/>
    <type7:Sentence xmi:id="379558" sofa="8" begin="38017" end="38060"/>
    <type7:Sentence xmi:id="379861" sofa="8" begin="38061" end="38109"/>
    <type7:Sentence xmi:id="380177" sofa="8" begin="38110" end="38154"/>
    <type7:Sentence xmi:id="380425" sofa="8" begin="38155" end="38287"/>
    <type7:Sentence xmi:id="381352" sofa="8" begin="38288" end="38413"/>
    <type7:Sentence xmi:id="382010" sofa="8" begin="38414" end="38542"/>
    <type7:Sentence xmi:id="382633" sofa="8" begin="38543" end="38663"/>
    <type7:Sentence xmi:id="383546" sofa="8" begin="38664" end="38687"/>
    <type7:Sentence xmi:id="383710" sofa="8" begin="38688" end="38737"/>
    <type7:Sentence xmi:id="383958" sofa="8" begin="38738" end="38848"/>
    <type7:Sentence xmi:id="384642" sofa="8" begin="38849" end="38967"/>
    <type7:Sentence xmi:id="385342" sofa="8" begin="38968" end="39019"/>
    <type7:Sentence xmi:id="385609" sofa="8" begin="39020" end="39111"/>
    <type7:Sentence xmi:id="386135" sofa="8" begin="39112" end="39226"/>
    <type7:Sentence xmi:id="386858" sofa="8" begin="39227" end="39327"/>
    <type7:Sentence xmi:id="387426" sofa="8" begin="39328" end="39473"/>
    <type7:Sentence xmi:id="388349" sofa="8" begin="39474" end="39653"/>
    <type7:Sentence xmi:id="389562" sofa="8" begin="39654" end="39765"/>
    <type7:Sentence xmi:id="390350" sofa="8" begin="39766" end="39874"/>
    <type7:Sentence xmi:id="391002" sofa="8" begin="39875" end="39947"/>
    <type7:Sentence xmi:id="391544" sofa="8" begin="39948" end="40021"/>
    <type7:Sentence xmi:id="391921" sofa="8" begin="40022" end="40194"/>
    <type7:Sentence xmi:id="393071" sofa="8" begin="40195" end="40272"/>
    <type7:Sentence xmi:id="393574" sofa="8" begin="40273" end="40330"/>
    <type7:Sentence xmi:id="393951" sofa="8" begin="40331" end="40416"/>
    <type7:Sentence xmi:id="394606" sofa="8" begin="40417" end="40524"/>
    <type7:Sentence xmi:id="395209" sofa="8" begin="40525" end="40596"/>
    <type7:Sentence xmi:id="395712" sofa="8" begin="40597" end="40643"/>
    <type7:Sentence xmi:id="396047" sofa="8" begin="40644" end="40730"/>
    <type7:Sentence xmi:id="396573" sofa="8" begin="40731" end="40813"/>
    <type7:Sentence xmi:id="397057" sofa="8" begin="40814" end="40956"/>
    <type7:Sentence xmi:id="398284" sofa="8" begin="40957" end="41016"/>
    <type7:Sentence xmi:id="398732" sofa="8" begin="41017" end="41102"/>
    <type7:Sentence xmi:id="399387" sofa="8" begin="41103" end="41164"/>
    <type7:Sentence xmi:id="399651" sofa="8" begin="41165" end="41232"/>
    <type7:Sentence xmi:id="400002" sofa="8" begin="41233" end="41262"/>
    <type7:Sentence xmi:id="400140" sofa="8" begin="41263" end="41299"/>
    <type7:Sentence xmi:id="400420" sofa="8" begin="41300" end="41345"/>
    <type7:Sentence xmi:id="400655" sofa="8" begin="41346" end="41369"/>
    <type7:Sentence xmi:id="400793" sofa="8" begin="41370" end="41410"/>
    <type7:Sentence xmi:id="401141" sofa="8" begin="41411" end="41444"/>
    <type7:Sentence xmi:id="401389" sofa="8" begin="41445" end="41474"/>
    <type7:Sentence xmi:id="401637" sofa="8" begin="41475" end="41502"/>
    <type7:Sentence xmi:id="401830" sofa="8" begin="41503" end="41589"/>
    <type7:Sentence xmi:id="402400" sofa="8" begin="41590" end="41642"/>
    <type7:Sentence xmi:id="402719" sofa="8" begin="41643" end="41723"/>
    <type7:Sentence xmi:id="403361" sofa="8" begin="41724" end="41809"/>
    <type7:Sentence xmi:id="404016" sofa="8" begin="41810" end="41942"/>
    <type7:Sentence xmi:id="404852" sofa="8" begin="41943" end="42038"/>
    <type7:Sentence xmi:id="405520" sofa="8" begin="42039" end="42129"/>
    <type7:Sentence xmi:id="406104" sofa="8" begin="42130" end="42189"/>
    <type7:Sentence xmi:id="406533" sofa="8" begin="42190" end="42247"/>
    <type7:Sentence xmi:id="406962" sofa="8" begin="42248" end="42306"/>
    <type7:Sentence xmi:id="407388" sofa="8" begin="42307" end="42375"/>
    <type7:Sentence xmi:id="407917" sofa="8" begin="42376" end="42462"/>
    <type7:Sentence xmi:id="408475" sofa="8" begin="42463" end="42520"/>
    <type7:Sentence xmi:id="408936" sofa="8" begin="42521" end="42692"/>
    <type7:Sentence xmi:id="410117" sofa="8" begin="42693" end="42750"/>
    <type7:Sentence xmi:id="410565" sofa="8" begin="42751" end="42859"/>
    <type7:Sentence xmi:id="411317" sofa="8" begin="42860" end="42960"/>
    <type7:Sentence xmi:id="411988" sofa="8" begin="42961" end="43046"/>
    <type7:Sentence xmi:id="412584" sofa="8" begin="43047" end="43233"/>
    <type7:Sentence xmi:id="413588" sofa="8" begin="43234" end="43324"/>
    <type7:Sentence xmi:id="414256" sofa="8" begin="43325" end="43405"/>
    <type7:Sentence xmi:id="414837" sofa="8" begin="43406" end="43533"/>
    <type7:Sentence xmi:id="415676" sofa="8" begin="43534" end="43856"/>
    <type7:Sentence xmi:id="417655" sofa="8" begin="43857" end="43999"/>
    <type7:Sentence xmi:id="418617" sofa="8" begin="44000" end="44074"/>
    <type7:Sentence xmi:id="419081" sofa="8" begin="44075" end="44133"/>
    <type7:Sentence xmi:id="419384" sofa="8" begin="44134" end="44169"/>
    <type7:Sentence xmi:id="419619" sofa="8" begin="44170" end="44259"/>
    <type7:Sentence xmi:id="420087" sofa="8" begin="44260" end="44320"/>
    <type7:Sentence xmi:id="420503" sofa="8" begin="44321" end="44365"/>
    <type7:Sentence xmi:id="420754" sofa="8" begin="44366" end="44398"/>
    <type7:Sentence xmi:id="420960" sofa="8" begin="44399" end="44510"/>
    <type7:Sentence xmi:id="421667" sofa="8" begin="44511" end="44639"/>
    <type7:Sentence xmi:id="422392" sofa="8" begin="44640" end="44780"/>
    <type7:Sentence xmi:id="423493" sofa="8" begin="44781" end="44899"/>
    <type7:Sentence xmi:id="424362" sofa="8" begin="44900" end="44992"/>
    <type7:Sentence xmi:id="424969" sofa="8" begin="44993" end="45043"/>
    <type7:Sentence xmi:id="425301" sofa="8" begin="45044" end="45078"/>
    <type7:Sentence xmi:id="425481" sofa="8" begin="45079" end="45136"/>
    <type7:Sentence xmi:id="425894" sofa="8" begin="45137" end="45219"/>
    <type7:Sentence xmi:id="426501" sofa="8" begin="45220" end="45363"/>
    <type7:Sentence xmi:id="427447" sofa="8" begin="45364" end="45469"/>
    <type7:Sentence xmi:id="428167" sofa="8" begin="45470" end="45574"/>
    <type7:Sentence xmi:id="428825" sofa="8" begin="45575" end="45656"/>
    <type7:Sentence xmi:id="429328" sofa="8" begin="45657" end="45776"/>
    <type7:Sentence xmi:id="430009" sofa="8" begin="45777" end="45890"/>
    <type7:Sentence xmi:id="430732" sofa="8" begin="45891" end="45947"/>
    <type7:Sentence xmi:id="431060" sofa="8" begin="45948" end="46125"/>
    <type7:Sentence xmi:id="432035" sofa="8" begin="46126" end="46268"/>
    <type7:Sentence xmi:id="432835" sofa="8" begin="46269" end="46307"/>
    <type7:Sentence xmi:id="433154" sofa="8" begin="46308" end="46456"/>
    <type7:Sentence xmi:id="434129" sofa="8" begin="46457" end="46602"/>
    <type7:Sentence xmi:id="435023" sofa="8" begin="46603" end="46719"/>
    <type7:Sentence xmi:id="435781" sofa="8" begin="46720" end="46878"/>
    <type7:Sentence xmi:id="436995" sofa="8" begin="46879" end="46922"/>
    <type7:Sentence xmi:id="437246" sofa="8" begin="46923" end="47040"/>
    <type7:Sentence xmi:id="437875" sofa="8" begin="47041" end="47119"/>
    <type7:Sentence xmi:id="438220" sofa="8" begin="47120" end="47203"/>
    <type7:Sentence xmi:id="438681" sofa="8" begin="47204" end="47312"/>
    <type7:Sentence xmi:id="439374" sofa="8" begin="47313" end="47429"/>
    <type7:Sentence xmi:id="440100" sofa="8" begin="47430" end="47527"/>
    <type7:Sentence xmi:id="440664" sofa="8" begin="47528" end="47608"/>
    <type7:Sentence xmi:id="441112" sofa="8" begin="47609" end="47720"/>
    <type7:Sentence xmi:id="441809" sofa="8" begin="47721" end="47830"/>
    <type7:Sentence xmi:id="442600" sofa="8" begin="47831" end="47948"/>
    <type7:Sentence xmi:id="443339" sofa="8" begin="47949" end="48096"/>
    <type7:Sentence xmi:id="444213" sofa="8" begin="48097" end="48300"/>
    <type7:Sentence xmi:id="445501" sofa="8" begin="48301" end="48469"/>
    <type7:Sentence xmi:id="446641" sofa="8" begin="48470" end="48618"/>
    <type7:Sentence xmi:id="447752" sofa="8" begin="48619" end="48678"/>
    <type7:Sentence xmi:id="448184" sofa="8" begin="48679" end="48796"/>
    <type7:Sentence xmi:id="448958" sofa="8" begin="48797" end="48867"/>
    <type7:Sentence xmi:id="449332" sofa="8" begin="48868" end="48919"/>
    <type7:Sentence xmi:id="449771" sofa="8" begin="48920" end="49000"/>
    <type7:Sentence xmi:id="450274" sofa="8" begin="49001" end="49048"/>
    <type7:Sentence xmi:id="450535" sofa="8" begin="49049" end="49142"/>
    <type7:Sentence xmi:id="451255" sofa="8" begin="49143" end="49199"/>
    <type7:Sentence xmi:id="451574" sofa="8" begin="49200" end="49258"/>
    <type7:Sentence xmi:id="451909" sofa="8" begin="49259" end="49405"/>
    <type7:Sentence xmi:id="452997" sofa="8" begin="49406" end="49531"/>
    <type7:Sentence xmi:id="454024" sofa="8" begin="49532" end="49670"/>
    <type7:Sentence xmi:id="454847" sofa="8" begin="49671" end="49790"/>
    <type7:Sentence xmi:id="455667" sofa="8" begin="49791" end="49887"/>
    <type7:Sentence xmi:id="456539" sofa="8" begin="49888" end="49952"/>
    <type7:Sentence xmi:id="456984" sofa="8" begin="49953" end="50000"/>
    <type7:Sentence xmi:id="457384" sofa="8" begin="50001" end="50120"/>
    <type7:Sentence xmi:id="458292" sofa="8" begin="50121" end="50257"/>
    <type7:Sentence xmi:id="459380" sofa="8" begin="50258" end="50366"/>
    <type7:Sentence xmi:id="460323" sofa="8" begin="50367" end="50452"/>
    <type7:Sentence xmi:id="460936" sofa="8" begin="50453" end="50524"/>
    <type7:Sentence xmi:id="461462" sofa="8" begin="50525" end="50615"/>
    <type7:Sentence xmi:id="462043" sofa="8" begin="50616" end="50702"/>
    <type7:Sentence xmi:id="462740" sofa="8" begin="50703" end="50789"/>
    <type7:Sentence xmi:id="463421" sofa="8" begin="50790" end="50819"/>
    <type7:Sentence xmi:id="463627" sofa="8" begin="50820" end="50859"/>
    <type7:Sentence xmi:id="463943" sofa="8" begin="50860" end="50984"/>
    <type7:Sentence xmi:id="464814" sofa="8" begin="50985" end="51120"/>
    <type7:Sentence xmi:id="465753" sofa="8" begin="51121" end="51209"/>
    <type7:Sentence xmi:id="466266" sofa="8" begin="51210" end="51236"/>
    <type7:Sentence xmi:id="466433" sofa="8" begin="51237" end="51273"/>
    <type7:Sentence xmi:id="466668" sofa="8" begin="51274" end="51398"/>
    <type7:Sentence xmi:id="467391" sofa="8" begin="51399" end="51593"/>
    <type7:Sentence xmi:id="468560" sofa="8" begin="51594" end="51718"/>
    <type7:Sentence xmi:id="469299" sofa="8" begin="51719" end="51919"/>
    <type7:Sentence xmi:id="470364" sofa="8" begin="51920" end="52063"/>
    <type7:Sentence xmi:id="471271" sofa="8" begin="52064" end="52129"/>
    <type7:Sentence xmi:id="471690" sofa="8" begin="52130" end="52311"/>
    <type7:Sentence xmi:id="472735" sofa="8" begin="52312" end="52464"/>
    <type7:Sentence xmi:id="473519" sofa="8" begin="52465" end="52636"/>
    <type7:Sentence xmi:id="474574" sofa="8" begin="52637" end="52772"/>
    <type7:Sentence xmi:id="475504" sofa="8" begin="52773" end="52971"/>
    <type7:Sentence xmi:id="476783" sofa="8" begin="52972" end="53033"/>
    <type7:Sentence xmi:id="477212" sofa="8" begin="53034" end="53120"/>
    <type7:Sentence xmi:id="477641" sofa="8" begin="53121" end="53231"/>
    <type7:Sentence xmi:id="478180" sofa="8" begin="53232" end="53344"/>
    <type7:Sentence xmi:id="478829" sofa="8" begin="53345" end="53475"/>
    <type7:Sentence xmi:id="479704" sofa="8" begin="53476" end="53581"/>
    <type7:Sentence xmi:id="480317" sofa="8" begin="53582" end="53719"/>
    <type7:Sentence xmi:id="481105" sofa="8" begin="53720" end="53821"/>
    <type7:Sentence xmi:id="481802" sofa="8" begin="53822" end="53949"/>
    <type7:Sentence xmi:id="482661" sofa="8" begin="53950" end="54119"/>
    <type7:Sentence xmi:id="483795" sofa="8" begin="54120" end="54212"/>
    <type7:Sentence xmi:id="484333" sofa="8" begin="54213" end="54321"/>
    <type7:Sentence xmi:id="484972" sofa="8" begin="54322" end="54403"/>
    <type7:Sentence xmi:id="485440" sofa="8" begin="54404" end="54480"/>
    <type7:Sentence xmi:id="485930" sofa="8" begin="54481" end="54551"/>
    <type7:Sentence xmi:id="486446" sofa="8" begin="54552" end="54627"/>
    <type7:Sentence xmi:id="486972" sofa="8" begin="54628" end="54761"/>
    <type7:Sentence xmi:id="487772" sofa="8" begin="54762" end="54850"/>
    <type7:Sentence xmi:id="488356" sofa="8" begin="54851" end="54924"/>
    <type7:Sentence xmi:id="488882" sofa="8" begin="54925" end="55005"/>
    <type7:Sentence xmi:id="489359" sofa="8" begin="55006" end="55070"/>
    <type7:Sentence xmi:id="489817" sofa="8" begin="55071" end="55153"/>
    <type7:Sentence xmi:id="490388" sofa="8" begin="55154" end="55241"/>
    <type7:Sentence xmi:id="490894" sofa="8" begin="55242" end="55322"/>
    <type7:Sentence xmi:id="491391" sofa="8" begin="55323" end="55463"/>
    <type7:Sentence xmi:id="492341" sofa="8" begin="55464" end="55640"/>
    <type7:Sentence xmi:id="493326" sofa="8" begin="55641" end="55714"/>
    <type7:Sentence xmi:id="493700" sofa="8" begin="55715" end="55814"/>
    <type7:Sentence xmi:id="494216" sofa="8" begin="55815" end="55923"/>
    <type7:Sentence xmi:id="494791" sofa="8" begin="55924" end="55982"/>
    <type7:Sentence xmi:id="495068" sofa="8" begin="55983" end="56068"/>
    <type7:Sentence xmi:id="495623" sofa="8" begin="56069" end="56154"/>
    <type7:Sentence xmi:id="496094" sofa="8" begin="56155" end="56293"/>
    <type7:Sentence xmi:id="496853" sofa="8" begin="56294" end="56363"/>
    <type7:Sentence xmi:id="497272" sofa="8" begin="56364" end="56434"/>
    <type7:Sentence xmi:id="497708" sofa="8" begin="56435" end="56507"/>
    <type7:Sentence xmi:id="498131" sofa="8" begin="56508" end="56568"/>
    <type7:Sentence xmi:id="498573" sofa="8" begin="56569" end="56626"/>
    <type7:Sentence xmi:id="498902" sofa="8" begin="56627" end="56709"/>
    <type7:Sentence xmi:id="499496" sofa="8" begin="56710" end="56780"/>
    <type7:Sentence xmi:id="500077" sofa="8" begin="56781" end="56840"/>
    <type7:Sentence xmi:id="500480" sofa="8" begin="56841" end="56902"/>
    <type7:Sentence xmi:id="500938" sofa="8" begin="56903" end="57016"/>
    <type7:Sentence xmi:id="501661" sofa="8" begin="57017" end="57120"/>
    <type7:Sentence xmi:id="502190" sofa="8" begin="57121" end="57212"/>
    <type7:Sentence xmi:id="502761" sofa="8" begin="57213" end="57289"/>
    <type7:Sentence xmi:id="503115" sofa="8" begin="57290" end="57379"/>
    <type7:Sentence xmi:id="503589" sofa="8" begin="57380" end="57489"/>
    <type7:Sentence xmi:id="504250" sofa="8" begin="57490" end="57532"/>
    <type7:Sentence xmi:id="504511" sofa="8" begin="57533" end="57575"/>
    <type7:Sentence xmi:id="504730" sofa="8" begin="57576" end="57619"/>
    <type7:Sentence xmi:id="504949" sofa="8" begin="57620" end="57719"/>
    <type7:Sentence xmi:id="505520" sofa="8" begin="57720" end="57843"/>
    <type7:Sentence xmi:id="506408" sofa="8" begin="57844" end="57967"/>
    <type7:Sentence xmi:id="507273" sofa="8" begin="57968" end="58080"/>
    <type7:Sentence xmi:id="507987" sofa="8" begin="58081" end="58218"/>
    <type7:Sentence xmi:id="508868" sofa="8" begin="58219" end="58302"/>
    <type7:Sentence xmi:id="509342" sofa="8" begin="58303" end="58436"/>
    <type7:Sentence xmi:id="510104" sofa="8" begin="58437" end="58523"/>
    <type7:Sentence xmi:id="510604" sofa="8" begin="58524" end="58713"/>
    <type7:Sentence xmi:id="511854" sofa="8" begin="58714" end="58860"/>
    <type7:Sentence xmi:id="513072" sofa="8" begin="58861" end="59002"/>
    <type7:Sentence xmi:id="513963" sofa="8" begin="59003" end="59057"/>
    <type7:Sentence xmi:id="514298" sofa="8" begin="59058" end="59116"/>
    <type7:Sentence xmi:id="514646" sofa="8" begin="59117" end="59208"/>
    <type7:Sentence xmi:id="515165" sofa="8" begin="59209" end="59302"/>
    <type7:Sentence xmi:id="515855" sofa="8" begin="59303" end="59424"/>
    <type7:Sentence xmi:id="516630" sofa="8" begin="59425" end="59543"/>
    <type7:Sentence xmi:id="517392" sofa="8" begin="59544" end="59639"/>
    <type7:Sentence xmi:id="518005" sofa="8" begin="59640" end="59731"/>
    <type7:Sentence xmi:id="518631" sofa="8" begin="59732" end="59849"/>
    <type7:Sentence xmi:id="519357" sofa="8" begin="59850" end="59958"/>
    <type7:Sentence xmi:id="519989" sofa="8" begin="59959" end="60063"/>
    <type7:Sentence xmi:id="520728" sofa="8" begin="60064" end="60213"/>
    <type7:Sentence xmi:id="521580" sofa="8" begin="60214" end="60394"/>
    <type7:Sentence xmi:id="522565" sofa="8" begin="60395" end="60564"/>
    <type7:Sentence xmi:id="523679" sofa="8" begin="60565" end="60667"/>
    <type7:Sentence xmi:id="524295" sofa="8" begin="60668" end="60774"/>
    <type7:Sentence xmi:id="524879" sofa="8" begin="60775" end="60844"/>
    <type7:Sentence xmi:id="525307" sofa="8" begin="60845" end="61084"/>
    <type7:Sentence xmi:id="526657" sofa="8" begin="61085" end="61248"/>
    <type7:Sentence xmi:id="527806" sofa="8" begin="61249" end="61415"/>
    <type7:Sentence xmi:id="528681" sofa="8" begin="61416" end="61553"/>
    <type7:Sentence xmi:id="529543" sofa="8" begin="61554" end="61679"/>
    <type7:Sentence xmi:id="530279" sofa="8" begin="61680" end="61744"/>
    <type7:Sentence xmi:id="530653" sofa="8" begin="61745" end="61856"/>
    <type7:Sentence xmi:id="531259" sofa="8" begin="61857" end="61908"/>
    <type7:Sentence xmi:id="531568" sofa="8" begin="61909" end="62063"/>
    <type7:Sentence xmi:id="532464" sofa="8" begin="62064" end="62129"/>
    <type7:Sentence xmi:id="532870" sofa="8" begin="62130" end="62192"/>
    <type7:Sentence xmi:id="533354" sofa="8" begin="62193" end="62263"/>
    <type7:Sentence xmi:id="533822" sofa="8" begin="62264" end="62297"/>
    <type7:Sentence xmi:id="534028" sofa="8" begin="62298" end="62346"/>
    <type7:Sentence xmi:id="534318" sofa="8" begin="62347" end="62400"/>
    <type7:Sentence xmi:id="534514" sofa="8" begin="62401" end="62474"/>
    <type7:Sentence xmi:id="534988" sofa="8" begin="62475" end="62537"/>
    <type7:Sentence xmi:id="535449" sofa="8" begin="62538" end="62596"/>
    <type7:Sentence xmi:id="535836" sofa="8" begin="62597" end="62700"/>
    <type7:Sentence xmi:id="536517" sofa="8" begin="62701" end="62782"/>
    <type7:Sentence xmi:id="537191" sofa="8" begin="62783" end="62901"/>
    <type7:Sentence xmi:id="537995" sofa="8" begin="62902" end="62973"/>
    <type7:Sentence xmi:id="538453" sofa="8" begin="62974" end="63020"/>
    <type7:Sentence xmi:id="538785" sofa="8" begin="63021" end="63091"/>
    <type7:Sentence xmi:id="539243" sofa="8" begin="63092" end="63165"/>
    <type7:Sentence xmi:id="539710" sofa="8" begin="63166" end="63236"/>
    <type7:Sentence xmi:id="540139" sofa="8" begin="63237" end="63337"/>
    <type7:Sentence xmi:id="540707" sofa="8" begin="63338" end="63394"/>
    <type7:Sentence xmi:id="541055" sofa="8" begin="63395" end="63481"/>
    <type7:Sentence xmi:id="541555" sofa="8" begin="63482" end="63566"/>
    <type7:Sentence xmi:id="542048" sofa="8" begin="63567" end="63646"/>
    <type7:Sentence xmi:id="542548" sofa="8" begin="63647" end="63745"/>
    <type7:Sentence xmi:id="543297" sofa="8" begin="63746" end="63862"/>
    <type7:Sentence xmi:id="544030" sofa="8" begin="63863" end="63905"/>
    <type7:Sentence xmi:id="544265" sofa="8" begin="63906" end="63958"/>
    <type7:Sentence xmi:id="544710" sofa="8" begin="63959" end="64004"/>
    <type7:Sentence xmi:id="545016" sofa="8" begin="64005" end="64073"/>
    <type7:Sentence xmi:id="545448" sofa="8" begin="64074" end="64145"/>
    <type7:Sentence xmi:id="546055" sofa="8" begin="64146" end="64221"/>
    <type7:Sentence xmi:id="546555" sofa="8" begin="64222" end="64287"/>
    <type7:Sentence xmi:id="547016" sofa="8" begin="64288" end="64375"/>
    <type7:Sentence xmi:id="547464" sofa="8" begin="64376" end="64486"/>
    <type7:Sentence xmi:id="548242" sofa="8" begin="64487" end="64526"/>
    <type7:Sentence xmi:id="548448" sofa="8" begin="64527" end="64618"/>
    <type7:Sentence xmi:id="549129" sofa="8" begin="64619" end="64656"/>
    <type7:Sentence xmi:id="549335" sofa="8" begin="64657" end="64721"/>
    <type7:Sentence xmi:id="549893" sofa="8" begin="64722" end="64767"/>
    <type7:Sentence xmi:id="550150" sofa="8" begin="64768" end="64846"/>
    <type7:Sentence xmi:id="550695" sofa="8" begin="64847" end="64901"/>
    <type7:Sentence xmi:id="551043" sofa="8" begin="64902" end="64996"/>
    <type7:Sentence xmi:id="551543" sofa="8" begin="64997" end="65101"/>
    <type7:Sentence xmi:id="552214" sofa="8" begin="65102" end="65235"/>
    <type7:Sentence xmi:id="552963" sofa="8" begin="65236" end="65291"/>
    <type7:Sentence xmi:id="553311" sofa="8" begin="65292" end="65346"/>
    <type7:Sentence xmi:id="553727" sofa="8" begin="65347" end="65388"/>
    <type7:Sentence xmi:id="554004" sofa="8" begin="65389" end="65447"/>
    <type7:Sentence xmi:id="554407" sofa="8" begin="65448" end="65500"/>
    <type7:Sentence xmi:id="554839" sofa="8" begin="65501" end="65591"/>
    <type7:Sentence xmi:id="555313" sofa="8" begin="65592" end="65636"/>
    <type7:Sentence xmi:id="555632" sofa="8" begin="65637" end="65702"/>
    <type7:Sentence xmi:id="556051" sofa="8" begin="65703" end="65782"/>
    <type7:Sentence xmi:id="556525" sofa="8" begin="65783" end="65888"/>
    <type7:Sentence xmi:id="557290" sofa="8" begin="65889" end="65996"/>
    <type7:Sentence xmi:id="558032" sofa="8" begin="65997" end="66046"/>
    <type7:Sentence xmi:id="558309" sofa="8" begin="66047" end="66129"/>
    <type7:Sentence xmi:id="558838" sofa="8" begin="66130" end="66246"/>
    <type7:Sentence xmi:id="559567" sofa="8" begin="66247" end="66374"/>
    <type7:Sentence xmi:id="560219" sofa="8" begin="66375" end="66468"/>
    <type7:Sentence xmi:id="560754" sofa="8" begin="66469" end="66634"/>
    <type7:Sentence xmi:id="561842" sofa="8" begin="66635" end="66707"/>
    <type7:Sentence xmi:id="562403" sofa="8" begin="66708" end="66892"/>
    <type7:Sentence xmi:id="563527" sofa="8" begin="66893" end="67015"/>
    <type7:Sentence xmi:id="564318" sofa="8" begin="67016" end="67152"/>
    <type7:Sentence xmi:id="565054" sofa="8" begin="67153" end="67313"/>
    <type7:Sentence xmi:id="565977" sofa="8" begin="67314" end="67392"/>
    <type7:Sentence xmi:id="566451" sofa="8" begin="67393" end="67448"/>
    <type7:Sentence xmi:id="566799" sofa="8" begin="67449" end="67544"/>
    <type7:Sentence xmi:id="567409" sofa="8" begin="67545" end="67605"/>
    <type7:Sentence xmi:id="567915" sofa="8" begin="67606" end="67648"/>
    <type7:Sentence xmi:id="568185" sofa="8" begin="67649" end="67694"/>
    <type7:Sentence xmi:id="568462" sofa="8" begin="67695" end="67743"/>
    <type7:Sentence xmi:id="568849" sofa="8" begin="67744" end="67852"/>
    <type7:Sentence xmi:id="569601" sofa="8" begin="67853" end="67932"/>
    <type7:Sentence xmi:id="570101" sofa="8" begin="67933" end="68034"/>
    <type7:Sentence xmi:id="570688" sofa="8" begin="68035" end="68074"/>
    <type7:Sentence xmi:id="570926" sofa="8" begin="68075" end="68119"/>
    <type7:Sentence xmi:id="571245" sofa="8" begin="68120" end="68176"/>
    <type7:Sentence xmi:id="571580" sofa="8" begin="68177" end="68267"/>
    <type7:Sentence xmi:id="572125" sofa="8" begin="68268" end="68315"/>
    <type7:Sentence xmi:id="572350" sofa="8" begin="68316" end="68386"/>
    <type7:Sentence xmi:id="572837" sofa="8" begin="68387" end="68425"/>
    <type7:Sentence xmi:id="573088" sofa="8" begin="68426" end="68482"/>
    <type7:Sentence xmi:id="573423" sofa="8" begin="68483" end="68593"/>
    <type7:Sentence xmi:id="574191" sofa="8" begin="68594" end="68662"/>
    <type7:Sentence xmi:id="574610" sofa="8" begin="68663" end="68738"/>
    <type7:Sentence xmi:id="575044" sofa="8" begin="68739" end="68875"/>
    <type7:Sentence xmi:id="575942" sofa="8" begin="68876" end="68955"/>
    <type7:Sentence xmi:id="576442" sofa="8" begin="68956" end="69032"/>
    <type7:Sentence xmi:id="577010" sofa="8" begin="69033" end="69083"/>
    <type7:Sentence xmi:id="577316" sofa="8" begin="69084" end="69127"/>
    <type7:Sentence xmi:id="577509" sofa="8" begin="69128" end="69189"/>
    <type7:Sentence xmi:id="577931" sofa="8" begin="69190" end="69250"/>
    <type7:Sentence xmi:id="578282" sofa="8" begin="69251" end="69315"/>
    <type7:Sentence xmi:id="578753" sofa="8" begin="69316" end="69415"/>
    <type7:Sentence xmi:id="579631" sofa="8" begin="69416" end="69457"/>
    <type7:Sentence xmi:id="579950" sofa="8" begin="69458" end="69509"/>
    <type7:Sentence xmi:id="580272" sofa="8" begin="69510" end="69551"/>
    <type7:Sentence xmi:id="580591" sofa="8" begin="69552" end="69603"/>
    <type7:Sentence xmi:id="580913" sofa="8" begin="69604" end="69666"/>
    <type7:Sentence xmi:id="581478" sofa="8" begin="69667" end="69713"/>
    <type7:Sentence xmi:id="581781" sofa="8" begin="69714" end="69778"/>
    <type7:Sentence xmi:id="582297" sofa="8" begin="69779" end="69833"/>
    <type7:Sentence xmi:id="582732" sofa="8" begin="69834" end="69894"/>
    <type7:Sentence xmi:id="583316" sofa="8" begin="69895" end="69989"/>
    <type7:Sentence xmi:id="584004" sofa="8" begin="69990" end="70032"/>
    <type7:Sentence xmi:id="584255" sofa="8" begin="70033" end="70097"/>
    <type7:Sentence xmi:id="584655" sofa="8" begin="70098" end="70235"/>
    <type7:Sentence xmi:id="585342" sofa="8" begin="70236" end="70446"/>
    <type7:Sentence xmi:id="586915" sofa="8" begin="70447" end="70642"/>
    <type7:Sentence xmi:id="588113" sofa="8" begin="70643" end="70752"/>
    <type7:Sentence xmi:id="588813" sofa="8" begin="70753" end="70895"/>
    <type7:Sentence xmi:id="589730" sofa="8" begin="70896" end="70986"/>
    <type7:Sentence xmi:id="590324" sofa="8" begin="70987" end="71049"/>
    <type7:Sentence xmi:id="590691" sofa="8" begin="71050" end="71120"/>
    <type7:Sentence xmi:id="591133" sofa="8" begin="71121" end="71190"/>
    <type7:Sentence xmi:id="591552" sofa="8" begin="71191" end="71262"/>
    <type7:Sentence xmi:id="592036" sofa="8" begin="71263" end="71323"/>
    <type7:Sentence xmi:id="592355" sofa="8" begin="71324" end="71384"/>
    <type7:Sentence xmi:id="592719" sofa="8" begin="71385" end="71460"/>
    <type7:Sentence xmi:id="593306" sofa="8" begin="71461" end="71520"/>
    <type7:Sentence xmi:id="593732" sofa="8" begin="71521" end="71593"/>
    <type7:Sentence xmi:id="594216" sofa="8" begin="71594" end="71663"/>
    <type7:Sentence xmi:id="594690" sofa="8" begin="71664" end="71748"/>
    <type7:Sentence xmi:id="595261" sofa="8" begin="71749" end="71929"/>
    <type7:Sentence xmi:id="596747" sofa="8" begin="71930" end="72037"/>
    <type7:Sentence xmi:id="597415" sofa="8" begin="72038" end="72120"/>
    <type7:Sentence xmi:id="597999" sofa="8" begin="72121" end="72193"/>
    <type7:Sentence xmi:id="598619" sofa="8" begin="72194" end="72258"/>
    <type7:Sentence xmi:id="599174" sofa="8" begin="72259" end="72305"/>
    <type7:Sentence xmi:id="599425" sofa="8" begin="72306" end="72346"/>
    <type7:Sentence xmi:id="599770" sofa="8" begin="72347" end="72411"/>
    <type7:Sentence xmi:id="600325" sofa="8" begin="72412" end="72452"/>
    <type7:Sentence xmi:id="600657" sofa="8" begin="72453" end="72530"/>
    <type7:Sentence xmi:id="601076" sofa="8" begin="72531" end="72615"/>
    <type7:Sentence xmi:id="601599" sofa="8" begin="72616" end="72745"/>
    <type7:Sentence xmi:id="602616" sofa="8" begin="72746" end="72834"/>
    <type7:Sentence xmi:id="603313" sofa="8" begin="72835" end="72987"/>
    <type7:Sentence xmi:id="604345" sofa="8" begin="72988" end="73156"/>
    <type7:Sentence xmi:id="605362" sofa="8" begin="73157" end="73211"/>
    <type7:Sentence xmi:id="605642" sofa="8" begin="73212" end="73248"/>
    <type7:Sentence xmi:id="605822" sofa="8" begin="73249" end="73353"/>
    <type7:Sentence xmi:id="606452" sofa="8" begin="73354" end="73420"/>
    <type7:Sentence xmi:id="606784" sofa="8" begin="73421" end="73575"/>
    <type7:Sentence xmi:id="607710" sofa="8" begin="73576" end="73665"/>
    <type7:Sentence xmi:id="608223" sofa="8" begin="73666" end="73764"/>
    <type7:Sentence xmi:id="608956" sofa="8" begin="73765" end="73869"/>
    <type7:Sentence xmi:id="609521" sofa="8" begin="73870" end="73963"/>
    <type7:Sentence xmi:id="610276" sofa="8" begin="73964" end="74041"/>
    <type7:Sentence xmi:id="610731" sofa="8" begin="74042" end="74115"/>
    <type7:Sentence xmi:id="611066" sofa="8" begin="74116" end="74159"/>
    <type7:Sentence xmi:id="611217" sofa="8" begin="74160" end="74203"/>
    <type7:Sentence xmi:id="611465" sofa="8" begin="74204" end="74273"/>
    <type7:Sentence xmi:id="611797" sofa="8" begin="74274" end="74382"/>
    <type7:Sentence xmi:id="612419" sofa="8" begin="74383" end="74493"/>
    <type7:Sentence xmi:id="613170" sofa="8" begin="74494" end="74539"/>
    <type7:Sentence xmi:id="613427" sofa="8" begin="74540" end="74618"/>
    <type7:Sentence xmi:id="613972" sofa="8" begin="74619" end="74673"/>
    <type7:Sentence xmi:id="614320" sofa="8" begin="74674" end="74749"/>
    <type7:Sentence xmi:id="614807" sofa="8" begin="74750" end="74829"/>
    <type7:Sentence xmi:id="615442" sofa="8" begin="74830" end="74905"/>
    <type7:Sentence xmi:id="615971" sofa="8" begin="74906" end="74975"/>
    <type7:Sentence xmi:id="616426" sofa="8" begin="74976" end="75064"/>
    <type7:Sentence xmi:id="617130" sofa="8" begin="75065" end="75108"/>
    <type7:Sentence xmi:id="617420" sofa="8" begin="75109" end="75189"/>
    <type7:Sentence xmi:id="617755" sofa="8" begin="75190" end="75257"/>
    <type7:Sentence xmi:id="618142" sofa="8" begin="75258" end="75290"/>
    <type7:Sentence xmi:id="618277" sofa="8" begin="75291" end="75329"/>
    <type7:Sentence xmi:id="618473" sofa="8" begin="75330" end="75377"/>
    <type7:Sentence xmi:id="618805" sofa="8" begin="75378" end="75422"/>
    <type7:Sentence xmi:id="619056" sofa="8" begin="75423" end="75561"/>
    <type7:Sentence xmi:id="619731" sofa="8" begin="75562" end="75715"/>
    <type7:Sentence xmi:id="620515" sofa="8" begin="75716" end="75830"/>
    <type7:Sentence xmi:id="621299" sofa="8" begin="75831" end="76130"/>
    <type7:Sentence xmi:id="623170" sofa="8" begin="76131" end="76286"/>
    <type7:Sentence xmi:id="623954" sofa="8" begin="76287" end="76362"/>
    <type7:Sentence xmi:id="624360" sofa="8" begin="76363" end="76403"/>
    <type7:Sentence xmi:id="624553" sofa="8" begin="76404" end="76512"/>
    <type7:Sentence xmi:id="625205" sofa="8" begin="76513" end="76561"/>
    <type7:Sentence xmi:id="625566" sofa="8" begin="76562" end="76618"/>
    <type7:Sentence xmi:id="625921" sofa="8" begin="76619" end="76704"/>
    <type7:Sentence xmi:id="626489" sofa="8" begin="76705" end="76807"/>
    <type7:Sentence xmi:id="627141" sofa="8" begin="76808" end="76872"/>
    <type7:Sentence xmi:id="627486" sofa="8" begin="76873" end="76943"/>
    <type7:Sentence xmi:id="627831" sofa="8" begin="76944" end="77401"/>
    <type7:Sentence xmi:id="630898" sofa="8" begin="77402" end="77500"/>
    <type7:Sentence xmi:id="631414" sofa="8" begin="77501" end="77589"/>
    <type7:Sentence xmi:id="631998" sofa="8" begin="77590" end="77632"/>
    <type7:Sentence xmi:id="632201" sofa="8" begin="77633" end="77711"/>
    <type7:Sentence xmi:id="632727" sofa="8" begin="77712" end="77814"/>
    <type7:Sentence xmi:id="633311" sofa="8" begin="77815" end="77861"/>
    <type7:Sentence xmi:id="633504" sofa="8" begin="77862" end="77908"/>
    <type7:Sentence xmi:id="633697" sofa="8" begin="77909" end="78010"/>
    <type7:Sentence xmi:id="634323" sofa="8" begin="78011" end="78032"/>
    <type7:Sentence xmi:id="634461" sofa="8" begin="78033" end="78090"/>
    <type7:Sentence xmi:id="634838" sofa="8" begin="78091" end="78148"/>
    <type7:Sentence xmi:id="635286" sofa="8" begin="78149" end="78276"/>
    <type7:Sentence xmi:id="636108" sofa="8" begin="78277" end="78358"/>
    <type7:Sentence xmi:id="636757" sofa="8" begin="78359" end="78389"/>
    <type7:Sentence xmi:id="637018" sofa="8" begin="78390" end="78441"/>
    <type7:Sentence xmi:id="637311" sofa="8" begin="78442" end="78526"/>
    <type7:Sentence xmi:id="637781" sofa="8" begin="78527" end="78577"/>
    <type7:Sentence xmi:id="638113" sofa="8" begin="78578" end="78628"/>
    <type7:Sentence xmi:id="638458" sofa="8" begin="78629" end="78726"/>
    <type7:Sentence xmi:id="639087" sofa="8" begin="78727" end="78803"/>
    <type7:Sentence xmi:id="639480" sofa="8" begin="78804" end="78842"/>
    <type7:Sentence xmi:id="639689" sofa="8" begin="78843" end="78905"/>
    <type7:Sentence xmi:id="640163" sofa="8" begin="78906" end="78984"/>
    <type7:Sentence xmi:id="640607" sofa="8" begin="78985" end="79032"/>
    <type7:Sentence xmi:id="640926" sofa="8" begin="79033" end="79091"/>
    <type7:Sentence xmi:id="641400" sofa="8" begin="79092" end="79168"/>
    <type7:Sentence xmi:id="641844" sofa="8" begin="79169" end="79216"/>
    <type7:Sentence xmi:id="642163" sofa="8" begin="79217" end="79253"/>
    <type7:Sentence xmi:id="642356" sofa="8" begin="79254" end="79376"/>
    <type7:Sentence xmi:id="643263" sofa="8" begin="79377" end="79411"/>
    <type7:Sentence xmi:id="643456" sofa="8" begin="79412" end="79560"/>
    <type7:Sentence xmi:id="644505" sofa="8" begin="79561" end="79615"/>
    <type7:Sentence xmi:id="644853" sofa="8" begin="79616" end="79728"/>
    <type7:Sentence xmi:id="645589" sofa="8" begin="79729" end="79807"/>
    <type7:Sentence xmi:id="646060" sofa="8" begin="79808" end="79910"/>
    <type7:Sentence xmi:id="646570" sofa="8" begin="79911" end="80101"/>
    <type7:Sentence xmi:id="647458" sofa="8" begin="80102" end="80189"/>
    <type7:Sentence xmi:id="647900" sofa="8" begin="80190" end="80290"/>
    <type7:Sentence xmi:id="648494" sofa="8" begin="80291" end="80427"/>
    <type7:Sentence xmi:id="649573" sofa="8" begin="80428" end="80588"/>
    <type7:Sentence xmi:id="650383" sofa="8" begin="80589" end="80648"/>
    <type7:Sentence xmi:id="650663" sofa="8" begin="80649" end="80795"/>
    <type7:Sentence xmi:id="651571" sofa="8" begin="80796" end="80855"/>
    <type7:Sentence xmi:id="651851" sofa="8" begin="80856" end="80970"/>
    <type7:Sentence xmi:id="652678" sofa="8" begin="80971" end="81048"/>
    <type7:Sentence xmi:id="653175" sofa="8" begin="81049" end="81207"/>
    <type7:Sentence xmi:id="654166" sofa="8" begin="81208" end="81270"/>
    <type7:Sentence xmi:id="654608" sofa="8" begin="81271" end="81327"/>
    <type7:Sentence xmi:id="654888" sofa="8" begin="81328" end="81419"/>
    <type7:Sentence xmi:id="655359" sofa="8" begin="81420" end="81545"/>
    <type7:Sentence xmi:id="656231" sofa="8" begin="81546" end="81635"/>
    <type7:Sentence xmi:id="657015" sofa="8" begin="81636" end="81822"/>
    <type7:Sentence xmi:id="658375" sofa="8" begin="81823" end="81928"/>
    <type7:Sentence xmi:id="659011" sofa="8" begin="81929" end="82003"/>
    <type7:Sentence xmi:id="659508" sofa="8" begin="82004" end="82154"/>
    <type7:Sentence xmi:id="660409" sofa="8" begin="82155" end="82224"/>
    <type7:Sentence xmi:id="660802" sofa="8" begin="82225" end="82412"/>
    <type7:Sentence xmi:id="662036" sofa="8" begin="82412" end="82414"/>
    <type7:Sentence xmi:id="662080" sofa="8" begin="82414" end="82415"/>
    <type7:Sentence xmi:id="662111" sofa="8" begin="82416" end="82600"/>
    <type7:Sentence xmi:id="663012" sofa="8" begin="82601" end="82732"/>
    <type7:Sentence xmi:id="663696" sofa="8" begin="82733" end="82832"/>
    <type7:Sentence xmi:id="664293" sofa="8" begin="82833" end="82942"/>
    <type7:Sentence xmi:id="664731" sofa="8" begin="82943" end="83076"/>
    <type7:Sentence xmi:id="665419" sofa="8" begin="83077" end="83126"/>
    <type7:Sentence xmi:id="665712" sofa="8" begin="83127" end="83216"/>
    <type7:Sentence xmi:id="666296" sofa="8" begin="83217" end="83274"/>
    <type7:Sentence xmi:id="666631" sofa="8" begin="83275" end="83330"/>
    <type7:Sentence xmi:id="667073" sofa="8" begin="83331" end="83396"/>
    <type7:Sentence xmi:id="667489" sofa="8" begin="83397" end="83446"/>
    <type7:Sentence xmi:id="667782" sofa="8" begin="83447" end="83522"/>
    <type7:Sentence xmi:id="668337" sofa="8" begin="83523" end="83600"/>
    <type7:Sentence xmi:id="668918" sofa="8" begin="83601" end="83674"/>
    <type7:Sentence xmi:id="669499" sofa="8" begin="83675" end="83729"/>
    <type7:Sentence xmi:id="669847" sofa="8" begin="83730" end="83846"/>
    <type7:Sentence xmi:id="670570" sofa="8" begin="83847" end="83904"/>
    <type7:Sentence xmi:id="670905" sofa="8" begin="83905" end="83960"/>
    <type7:Sentence xmi:id="671347" sofa="8" begin="83961" end="84025"/>
    <type7:Sentence xmi:id="671763" sofa="8" begin="84026" end="84082"/>
    <type7:Sentence xmi:id="672101" sofa="8" begin="84083" end="84203"/>
    <type7:Sentence xmi:id="672804" sofa="8" begin="84204" end="84256"/>
    <type7:Sentence xmi:id="673152" sofa="8" begin="84257" end="84339"/>
    <type7:Sentence xmi:id="673736" sofa="8" begin="84340" end="84397"/>
    <type7:Sentence xmi:id="674071" sofa="8" begin="84398" end="84453"/>
    <type7:Sentence xmi:id="674513" sofa="8" begin="84454" end="84515"/>
    <type7:Sentence xmi:id="674929" sofa="8" begin="84516" end="84565"/>
    <type7:Sentence xmi:id="675274" sofa="8" begin="84566" end="84593"/>
    <type7:Sentence xmi:id="675483" sofa="8" begin="84594" end="84644"/>
    <type7:Sentence xmi:id="675941" sofa="8" begin="84645" end="84747"/>
    <type7:Sentence xmi:id="676635" sofa="8" begin="84748" end="84785"/>
    <type7:Sentence xmi:id="676912" sofa="8" begin="84786" end="84815"/>
    <type7:Sentence xmi:id="677134" sofa="8" begin="84816" end="84861"/>
    <type7:Sentence xmi:id="677414" sofa="8" begin="84862" end="84903"/>
    <type7:Sentence xmi:id="677717" sofa="8" begin="84904" end="84953"/>
    <type7:Sentence xmi:id="678065" sofa="8" begin="84954" end="85065"/>
    <type7:Sentence xmi:id="678817" sofa="8" begin="85066" end="85140"/>
    <type7:Sentence xmi:id="679356" sofa="8" begin="85141" end="85210"/>
    <type7:Sentence xmi:id="679882" sofa="8" begin="85211" end="85257"/>
    <type7:Sentence xmi:id="680159" sofa="8" begin="85258" end="85372"/>
    <type7:Sentence xmi:id="680859" sofa="8" begin="85373" end="85428"/>
    <type7:Sentence xmi:id="681304" sofa="8" begin="85429" end="85539"/>
    <type7:Sentence xmi:id="682056" sofa="8" begin="85540" end="85589"/>
    <type7:Sentence xmi:id="682401" sofa="8" begin="85590" end="85651"/>
    <type7:Sentence xmi:id="682849" sofa="8" begin="85652" end="85739"/>
    <type7:Sentence xmi:id="683462" sofa="8" begin="85740" end="85824"/>
    <type7:Sentence xmi:id="684146" sofa="8" begin="85825" end="85882"/>
    <type7:Sentence xmi:id="684594" sofa="8" begin="85883" end="85968"/>
    <type7:Sentence xmi:id="685207" sofa="8" begin="85969" end="86053"/>
    <type7:Sentence xmi:id="685891" sofa="8" begin="86054" end="86125"/>
    <type7:Sentence xmi:id="686365" sofa="8" begin="86126" end="86205"/>
    <type7:Sentence xmi:id="687004" sofa="8" begin="86206" end="86261"/>
    <type7:Sentence xmi:id="687362" sofa="8" begin="86262" end="86347"/>
    <type7:Sentence xmi:id="687936" sofa="8" begin="86348" end="86397"/>
    <type7:Sentence xmi:id="688268" sofa="8" begin="86398" end="86447"/>
    <type7:Sentence xmi:id="688496" sofa="8" begin="86448" end="86496"/>
    <type7:Sentence xmi:id="688828" sofa="8" begin="86497" end="86546"/>
    <type7:Sentence xmi:id="689056" sofa="8" begin="86547" end="86596"/>
    <type7:Sentence xmi:id="689388" sofa="8" begin="86597" end="86676"/>
    <type7:Sentence xmi:id="689949" sofa="8" begin="86677" end="86768"/>
    <type7:Sentence xmi:id="690529" sofa="8" begin="86769" end="86852"/>
    <type7:Sentence xmi:id="691103" sofa="8" begin="86853" end="86900"/>
    <type7:Sentence xmi:id="691435" sofa="8" begin="86901" end="86950"/>
    <type7:Sentence xmi:id="691663" sofa="8" begin="86951" end="86997"/>
    <type7:Sentence xmi:id="691995" sofa="8" begin="86998" end="87047"/>
    <type7:Sentence xmi:id="692223" sofa="8" begin="87048" end="87095"/>
    <type7:Sentence xmi:id="692555" sofa="8" begin="87096" end="87170"/>
    <type7:Sentence xmi:id="693074" sofa="8" begin="87171" end="87192"/>
    <type7:Sentence xmi:id="693254" sofa="8" begin="87193" end="87247"/>
    <type7:Sentence xmi:id="693676" sofa="8" begin="87248" end="87322"/>
    <type7:Sentence xmi:id="694172" sofa="8" begin="87323" end="87433"/>
    <type7:Sentence xmi:id="694972" sofa="8" begin="87434" end="87630"/>
    <type7:Sentence xmi:id="696267" sofa="8" begin="87631" end="87685"/>
    <type7:Sentence xmi:id="696560" sofa="8" begin="87686" end="87749"/>
    <type7:Sentence xmi:id="697060" sofa="8" begin="87750" end="87812"/>
    <type7:Sentence xmi:id="697486" sofa="8" begin="87813" end="87879"/>
    <type7:Sentence xmi:id="697912" sofa="8" begin="87880" end="87941"/>
    <type7:Sentence xmi:id="698315" sofa="8" begin="87942" end="88020"/>
    <type7:Sentence xmi:id="698802" sofa="8" begin="88021" end="88104"/>
    <type7:Sentence xmi:id="699376" sofa="8" begin="88105" end="88158"/>
    <type7:Sentence xmi:id="699695" sofa="8" begin="88159" end="88242"/>
    <type7:Sentence xmi:id="700237" sofa="8" begin="88243" end="88358"/>
    <type7:Sentence xmi:id="701099" sofa="8" begin="88359" end="88410"/>
    <type7:Sentence xmi:id="701434" sofa="8" begin="88411" end="88471"/>
    <type7:Sentence xmi:id="701934" sofa="8" begin="88472" end="88528"/>
    <type7:Sentence xmi:id="702282" sofa="8" begin="88529" end="88599"/>
    <type7:Sentence xmi:id="702704" sofa="8" begin="88600" end="88676"/>
    <type7:Sentence xmi:id="703188" sofa="8" begin="88677" end="88768"/>
    <type7:Sentence xmi:id="703782" sofa="8" begin="88769" end="88829"/>
    <type7:Sentence xmi:id="704198" sofa="8" begin="88830" end="88909"/>
    <type7:Sentence xmi:id="704834" sofa="8" begin="88910" end="88958"/>
    <type7:Sentence xmi:id="705192" sofa="8" begin="88959" end="89006"/>
    <type7:Sentence xmi:id="705553" sofa="8" begin="89007" end="89086"/>
    <type7:Sentence xmi:id="706066" sofa="8" begin="89087" end="89140"/>
    <type7:Sentence xmi:id="706385" sofa="8" begin="89141" end="89226"/>
    <type7:Sentence xmi:id="706907" sofa="8" begin="89227" end="89306"/>
    <type7:Sentence xmi:id="707420" sofa="8" begin="89307" end="89366"/>
    <type7:Sentence xmi:id="707810" sofa="8" begin="89367" end="89386"/>
    <type7:Sentence xmi:id="707948" sofa="8" begin="89387" end="89457"/>
    <type7:Sentence xmi:id="708432" sofa="8" begin="89458" end="89594"/>
    <type7:Sentence xmi:id="709475" sofa="8" begin="89595" end="89718"/>
    <type7:Sentence xmi:id="710347" sofa="8" begin="89719" end="89760"/>
    <type7:Sentence xmi:id="710653" sofa="8" begin="89761" end="89850"/>
    <type7:Sentence xmi:id="711218" sofa="8" begin="89851" end="89898"/>
    <type7:Sentence xmi:id="711608" sofa="8" begin="89899" end="89958"/>
    <type7:Sentence xmi:id="711985" sofa="8" begin="89959" end="90010"/>
    <type7:Sentence xmi:id="712291" sofa="8" begin="90011" end="90054"/>
    <type7:Sentence xmi:id="712649" sofa="8" begin="90055" end="90098"/>
    <type7:Sentence xmi:id="712874" sofa="8" begin="90099" end="90162"/>
    <type7:Sentence xmi:id="713209" sofa="8" begin="90163" end="90212"/>
    <type7:Sentence xmi:id="713638" sofa="8" begin="90213" end="90265"/>
    <type7:Sentence xmi:id="714096" sofa="8" begin="90266" end="90335"/>
    <type7:Sentence xmi:id="714570" sofa="8" begin="90336" end="90384"/>
    <type7:Sentence xmi:id="714905" sofa="8" begin="90385" end="90443"/>
    <type7:Sentence xmi:id="715372" sofa="8" begin="90444" end="90472"/>
    <type7:Sentence xmi:id="715568" sofa="8" begin="90473" end="90515"/>
    <type7:Sentence xmi:id="715845" sofa="8" begin="90516" end="90550"/>
    <type7:Sentence xmi:id="716080" sofa="8" begin="90551" end="90589"/>
    <type7:Sentence xmi:id="716344" sofa="8" begin="90590" end="90616"/>
    <type7:Sentence xmi:id="716540" sofa="8" begin="90617" end="90684"/>
    <type7:Sentence xmi:id="717069" sofa="8" begin="90685" end="90732"/>
    <type7:Sentence xmi:id="717375" sofa="8" begin="90733" end="90772"/>
    <type7:Sentence xmi:id="717639" sofa="8" begin="90773" end="90809"/>
    <type7:Sentence xmi:id="717903" sofa="8" begin="90810" end="90834"/>
    <type7:Sentence xmi:id="718099" sofa="8" begin="90835" end="90896"/>
    <type7:Sentence xmi:id="718599" sofa="8" begin="90897" end="90942"/>
    <type7:Sentence xmi:id="718905" sofa="8" begin="90943" end="90980"/>
    <type7:Sentence xmi:id="719169" sofa="8" begin="90981" end="91031"/>
    <type7:Sentence xmi:id="719501" sofa="8" begin="91032" end="91091"/>
    <type7:Sentence xmi:id="720001" sofa="8" begin="91092" end="91138"/>
    <type7:Sentence xmi:id="720220" sofa="8" begin="91139" end="91207"/>
    <type7:Sentence xmi:id="720636" sofa="8" begin="91208" end="91249"/>
    <type7:Sentence xmi:id="720900" sofa="8" begin="91250" end="91291"/>
    <type7:Sentence xmi:id="721164" sofa="8" begin="91292" end="91335"/>
    <type7:Sentence xmi:id="721493" sofa="8" begin="91336" end="91378"/>
    <type7:Sentence xmi:id="721741" sofa="8" begin="91379" end="91441"/>
    <type7:Sentence xmi:id="722170" sofa="8" begin="91442" end="91477"/>
    <type7:Sentence xmi:id="722434" sofa="8" begin="91478" end="91537"/>
    <type7:Sentence xmi:id="722888" sofa="8" begin="91538" end="91618"/>
    <type7:Sentence xmi:id="723414" sofa="8" begin="91619" end="91700"/>
    <type7:Sentence xmi:id="724027" sofa="8" begin="91701" end="91765"/>
    <type7:Sentence xmi:id="724459" sofa="8" begin="91766" end="91807"/>
    <type7:Sentence xmi:id="724742" sofa="8" begin="91808" end="91889"/>
    <type7:Sentence xmi:id="725355" sofa="8" begin="91890" end="91913"/>
    <type7:Sentence xmi:id="725535" sofa="8" begin="91914" end="92000"/>
    <type7:Sentence xmi:id="726184" sofa="8" begin="92001" end="92066"/>
    <type7:Sentence xmi:id="726665" sofa="8" begin="92067" end="92179"/>
    <type7:Sentence xmi:id="727469" sofa="8" begin="92180" end="92302"/>
    <type7:Sentence xmi:id="728030" sofa="8" begin="92303" end="92416"/>
    <type7:Sentence xmi:id="728811" sofa="8" begin="92417" end="92512"/>
    <type7:Sentence xmi:id="729460" sofa="8" begin="92513" end="92587"/>
    <type7:Sentence xmi:id="729963" sofa="8" begin="92588" end="92713"/>
    <type7:Sentence xmi:id="730670" sofa="8" begin="92714" end="92864"/>
    <type7:Sentence xmi:id="731557" sofa="8" begin="92865" end="92985"/>
    <type7:Sentence xmi:id="732102" sofa="8" begin="92986" end="93099"/>
    <type7:Sentence xmi:id="732883" sofa="8" begin="93100" end="93195"/>
    <type7:Sentence xmi:id="733532" sofa="8" begin="93196" end="93353"/>
    <type7:Sentence xmi:id="734493" sofa="8" begin="93354" end="93555"/>
    <type7:Sentence xmi:id="735842" sofa="8" begin="93556" end="93615"/>
    <type7:Sentence xmi:id="736187" sofa="8" begin="93616" end="93747"/>
    <type7:Sentence xmi:id="737168" sofa="8" begin="93748" end="93813"/>
    <type7:Sentence xmi:id="737584" sofa="8" begin="93814" end="93892"/>
    <type7:Sentence xmi:id="738084" sofa="8" begin="93893" end="93952"/>
    <type7:Sentence xmi:id="738503" sofa="8" begin="93953" end="94061"/>
    <type7:Sentence xmi:id="739278" sofa="8" begin="94062" end="94180"/>
    <type7:Sentence xmi:id="739988" sofa="8" begin="94181" end="94507"/>
    <type7:Sentence xmi:id="742147" sofa="8" begin="94508" end="94623"/>
    <type7:Sentence xmi:id="742834" sofa="8" begin="94624" end="94730"/>
    <type7:Sentence xmi:id="743492" sofa="8" begin="94731" end="94970"/>
    <type7:Sentence xmi:id="744986" sofa="8" begin="94971" end="95145"/>
    <type7:Sentence xmi:id="746278" sofa="8" begin="95146" end="95212"/>
    <type7:Sentence xmi:id="746723" sofa="8" begin="95213" end="95323"/>
    <type7:Sentence xmi:id="747387" sofa="8" begin="95324" end="95430"/>
    <type7:Sentence xmi:id="748068" sofa="8" begin="95431" end="95515"/>
    <type7:Sentence xmi:id="748552" sofa="8" begin="95516" end="95616"/>
    <type7:Sentence xmi:id="749298" sofa="8" begin="95617" end="95746"/>
    <type7:Sentence xmi:id="750215" sofa="8" begin="95747" end="95878"/>
    <type7:Sentence xmi:id="751170" sofa="8" begin="95879" end="96011"/>
    <type7:Sentence xmi:id="752103" sofa="8" begin="96012" end="96187"/>
    <type7:Sentence xmi:id="753210" sofa="8" begin="96188" end="96329"/>
    <type7:Sentence xmi:id="754013" sofa="8" begin="96330" end="96392"/>
    <type7:Sentence xmi:id="754419" sofa="8" begin="96393" end="96553"/>
    <type7:Sentence xmi:id="755248" sofa="8" begin="96554" end="96630"/>
    <type7:Sentence xmi:id="755654" sofa="8" begin="96631" end="96736"/>
    <type7:Sentence xmi:id="756280" sofa="8" begin="96737" end="96829"/>
    <type7:Sentence xmi:id="756922" sofa="8" begin="96830" end="97036"/>
    <type7:Sentence xmi:id="758439" sofa="8" begin="97037" end="97101"/>
    <type7:Sentence xmi:id="758803" sofa="8" begin="97102" end="97188"/>
    <type7:Sentence xmi:id="759406" sofa="8" begin="97189" end="97297"/>
    <type7:Sentence xmi:id="760061" sofa="8" begin="97298" end="97425"/>
    <type7:Sentence xmi:id="760835" sofa="8" begin="97426" end="97547"/>
    <type7:Sentence xmi:id="761706" sofa="8" begin="97548" end="97679"/>
    <type7:Sentence xmi:id="762548" sofa="8" begin="97680" end="97727"/>
    <type7:Sentence xmi:id="762909" sofa="8" begin="97728" end="97815"/>
    <type7:Sentence xmi:id="763415" sofa="8" begin="97816" end="97952"/>
    <type7:Sentence xmi:id="764419" sofa="8" begin="97953" end="97998"/>
    <type7:Sentence xmi:id="764657" sofa="8" begin="97999" end="98043"/>
    <type7:Sentence xmi:id="764976" sofa="8" begin="98044" end="98169"/>
    <type7:Sentence xmi:id="765663" sofa="8" begin="98170" end="98241"/>
    <type7:Sentence xmi:id="766182" sofa="8" begin="98242" end="98381"/>
    <type7:Sentence xmi:id="767092" sofa="8" begin="98382" end="98444"/>
    <type7:Sentence xmi:id="767430" sofa="8" begin="98445" end="98562"/>
    <type7:Sentence xmi:id="768095" sofa="8" begin="98563" end="98615"/>
    <type7:Sentence xmi:id="768472" sofa="8" begin="98616" end="98683"/>
    <type7:Sentence xmi:id="769069" sofa="8" begin="98684" end="98844"/>
    <type7:Sentence xmi:id="770231" sofa="8" begin="98845" end="98955"/>
    <type7:Sentence xmi:id="770996" sofa="8" begin="98956" end="99051"/>
    <type7:Sentence xmi:id="771800" sofa="8" begin="99052" end="99186"/>
    <type7:Sentence xmi:id="772745" sofa="8" begin="99187" end="99261"/>
    <type7:Sentence xmi:id="773267" sofa="8" begin="99262" end="99306"/>
    <type7:Sentence xmi:id="773547" sofa="8" begin="99307" end="99349"/>
    <type7:Sentence xmi:id="773840" sofa="8" begin="99350" end="99407"/>
    <type7:Sentence xmi:id="774314" sofa="8" begin="99408" end="99503"/>
    <type7:Sentence xmi:id="775008" sofa="8" begin="99504" end="99744"/>
    <type7:Sentence xmi:id="776571" sofa="8" begin="99745" end="99790"/>
    <type7:Sentence xmi:id="776919" sofa="8" begin="99791" end="99847"/>
    <type7:Sentence xmi:id="777329" sofa="8" begin="99848" end="99892"/>
    <type7:Sentence xmi:id="777661" sofa="8" begin="99893" end="99956"/>
    <type7:Sentence xmi:id="778148" sofa="8" begin="99957" end="99992"/>
    <type7:Sentence xmi:id="778383" sofa="8" begin="99993" end="100040"/>
    <type7:Sentence xmi:id="778721" sofa="8" begin="100041" end="100105"/>
    <type7:Sentence xmi:id="779166" sofa="8" begin="100106" end="100137"/>
    <type7:Sentence xmi:id="779427" sofa="8" begin="100138" end="100229"/>
    <type7:Sentence xmi:id="780008" sofa="8" begin="100230" end="100309"/>
    <type7:Sentence xmi:id="780553" sofa="8" begin="100310" end="100402"/>
    <type7:Sentence xmi:id="781082" sofa="8" begin="100403" end="100478"/>
    <type7:Sentence xmi:id="781624" sofa="8" begin="100479" end="100570"/>
    <type7:Sentence xmi:id="782185" sofa="8" begin="100571" end="100697"/>
    <type7:Sentence xmi:id="783099" sofa="8" begin="100698" end="100743"/>
    <type7:Sentence xmi:id="783447" sofa="8" begin="100744" end="100799"/>
    <type7:Sentence xmi:id="783857" sofa="8" begin="100800" end="100857"/>
    <type7:Sentence xmi:id="784315" sofa="8" begin="100858" end="100893"/>
    <type7:Sentence xmi:id="784550" sofa="8" begin="100894" end="100939"/>
    <type7:Sentence xmi:id="784888" sofa="8" begin="100940" end="101002"/>
    <type7:Sentence xmi:id="785333" sofa="8" begin="101003" end="101034"/>
    <type7:Sentence xmi:id="785594" sofa="8" begin="101035" end="101126"/>
    <type7:Sentence xmi:id="786175" sofa="8" begin="101127" end="101206"/>
    <type7:Sentence xmi:id="786720" sofa="8" begin="101207" end="101299"/>
    <type7:Sentence xmi:id="787249" sofa="8" begin="101300" end="101375"/>
    <type7:Sentence xmi:id="787791" sofa="8" begin="101376" end="101467"/>
    <type7:Sentence xmi:id="788352" sofa="8" begin="101468" end="101594"/>
    <type7:Sentence xmi:id="789266" sofa="8" begin="101595" end="101654"/>
    <type7:Sentence xmi:id="789734" sofa="8" begin="101655" end="101745"/>
    <type7:Sentence xmi:id="790331" sofa="8" begin="101746" end="101836"/>
    <type7:Sentence xmi:id="790834" sofa="8" begin="101837" end="101946"/>
    <type7:Sentence xmi:id="791528" sofa="8" begin="101947" end="102061"/>
    <type7:Sentence xmi:id="792364" sofa="8" begin="102062" end="102196"/>
    <type7:Sentence xmi:id="793145" sofa="8" begin="102197" end="102304"/>
    <type7:Sentence xmi:id="793729" sofa="8" begin="102305" end="102447"/>
    <type7:Sentence xmi:id="794596" sofa="8" begin="102448" end="102559"/>
    <type7:Sentence xmi:id="795364" sofa="8" begin="102560" end="102686"/>
    <type7:Sentence xmi:id="796293" sofa="8" begin="102687" end="102831"/>
    <type7:Sentence xmi:id="797316" sofa="8" begin="102832" end="102981"/>
    <type7:Sentence xmi:id="798314" sofa="8" begin="102982" end="103110"/>
    <type7:Sentence xmi:id="799270" sofa="8" begin="103111" end="103237"/>
    <type7:Sentence xmi:id="800200" sofa="8" begin="103238" end="103304"/>
    <type7:Sentence xmi:id="800590" sofa="8" begin="103305" end="103369"/>
    <type7:Sentence xmi:id="801032" sofa="8" begin="103370" end="103424"/>
    <type7:Sentence xmi:id="801325" sofa="8" begin="103425" end="103552"/>
    <type7:Sentence xmi:id="802248" sofa="8" begin="103553" end="103650"/>
    <type7:Sentence xmi:id="802835" sofa="8" begin="103651" end="103714"/>
    <type7:Sentence xmi:id="803235" sofa="8" begin="103715" end="103817"/>
    <type7:Sentence xmi:id="803932" sofa="8" begin="103818" end="103858"/>
    <type7:Sentence xmi:id="804209" sofa="8" begin="103859" end="103977"/>
    <type7:Sentence xmi:id="805058" sofa="8" begin="103978" end="104088"/>
    <type7:Sentence xmi:id="805877" sofa="8" begin="104089" end="104206"/>
    <type7:Sentence xmi:id="806664" sofa="8" begin="104207" end="104275"/>
    <type7:Sentence xmi:id="807099" sofa="8" begin="104276" end="104344"/>
    <type7:Sentence xmi:id="807567" sofa="8" begin="104345" end="104525"/>
    <type7:Sentence xmi:id="808584" sofa="8" begin="104526" end="104630"/>
    <type7:Sentence xmi:id="809229" sofa="8" begin="104631" end="104696"/>
    <type7:Sentence xmi:id="809664" sofa="8" begin="104697" end="104731"/>
    <type7:Sentence xmi:id="809899" sofa="8" begin="104732" end="104793"/>
    <type7:Sentence xmi:id="810347" sofa="8" begin="104794" end="104921"/>
    <type7:Sentence xmi:id="811180" sofa="8" begin="104922" end="105038"/>
    <type7:Sentence xmi:id="811919" sofa="8" begin="105039" end="105096"/>
    <type7:Sentence xmi:id="812215" sofa="8" begin="105097" end="105303"/>
    <type7:Sentence xmi:id="813616" sofa="8" begin="105304" end="105353"/>
    <type7:Sentence xmi:id="813906" sofa="8" begin="105354" end="105471"/>
    <type7:Sentence xmi:id="814691" sofa="8" begin="105472" end="105576"/>
    <type7:Sentence xmi:id="815356" sofa="8" begin="105577" end="105727"/>
    <type7:Sentence xmi:id="816286" sofa="8" begin="105728" end="105783"/>
    <type7:Sentence xmi:id="816731" sofa="8" begin="105784" end="105894"/>
    <type7:Sentence xmi:id="817496" sofa="8" begin="105895" end="106074"/>
    <type7:Sentence xmi:id="818613" sofa="8" begin="106075" end="106184"/>
    <type7:Sentence xmi:id="819326" sofa="8" begin="106185" end="106235"/>
    <type7:Sentence xmi:id="819674" sofa="8" begin="106236" end="106429"/>
    <type7:Sentence xmi:id="821114" sofa="8" begin="106430" end="106481"/>
    <type7:Sentence xmi:id="821404" sofa="8" begin="106482" end="106580"/>
    <type7:Sentence xmi:id="822078" sofa="8" begin="106581" end="106678"/>
    <type7:Sentence xmi:id="822740" sofa="8" begin="106679" end="106775"/>
    <type7:Sentence xmi:id="823444" sofa="8" begin="106776" end="106926"/>
    <type7:Sentence xmi:id="824374" sofa="8" begin="106927" end="106982"/>
    <type7:Sentence xmi:id="824819" sofa="8" begin="106983" end="107093"/>
    <type7:Sentence xmi:id="825584" sofa="8" begin="107094" end="107266"/>
    <type7:Sentence xmi:id="826782" sofa="8" begin="107267" end="107379"/>
    <type7:Sentence xmi:id="827495" sofa="8" begin="107380" end="107551"/>
    <type7:Sentence xmi:id="828483" sofa="8" begin="107552" end="107710"/>
    <type7:Sentence xmi:id="829412" sofa="8" begin="107711" end="107793"/>
    <type7:Sentence xmi:id="830019" sofa="8" begin="107794" end="107828"/>
    <type7:Sentence xmi:id="830225" sofa="8" begin="107829" end="107930"/>
    <type7:Sentence xmi:id="830809" sofa="8" begin="107931" end="107973"/>
    <type7:Sentence xmi:id="831044" sofa="8" begin="107974" end="108063"/>
    <type7:Sentence xmi:id="831518" sofa="8" begin="108064" end="108128"/>
    <type7:Sentence xmi:id="831866" sofa="8" begin="108129" end="108196"/>
    <type7:Sentence xmi:id="832240" sofa="8" begin="108197" end="108269"/>
    <type7:Sentence xmi:id="832733" sofa="8" begin="108270" end="108325"/>
    <type7:Sentence xmi:id="833107" sofa="8" begin="108326" end="108409"/>
    <type7:Sentence xmi:id="833662" sofa="8" begin="108410" end="108511"/>
    <type7:Sentence xmi:id="834316" sofa="8" begin="108512" end="108661"/>
    <type7:Sentence xmi:id="835466" sofa="8" begin="108662" end="108718"/>
    <type7:Sentence xmi:id="835901" sofa="8" begin="108719" end="108773"/>
    <type7:Sentence xmi:id="836213" sofa="8" begin="108774" end="108867"/>
    <type7:Sentence xmi:id="836700" sofa="8" begin="108868" end="108976"/>
    <type7:Sentence xmi:id="837326" sofa="8" begin="108977" end="109089"/>
    <type7:Sentence xmi:id="838007" sofa="8" begin="109090" end="109135"/>
    <type7:Sentence xmi:id="838303" sofa="8" begin="109136" end="109265"/>
    <cas:View sofa="8" members
    <cas:View sofa="1"/>
</xmi:XMI>
